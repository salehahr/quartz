<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>math on Zettelkasten</title><link>https://salehahr.github.io/zettelkasten/tags/math/</link><description>Recent content in math on Zettelkasten</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 30 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://salehahr.github.io/zettelkasten/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>Identity of a group</title><link>https://salehahr.github.io/zettelkasten/rotations/identity-of-a-group/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/identity-of-a-group/</guid><description>Source: https://vladimirbozovic.net/univerzitet/wp-content/uploads/2010/11/group-theory-chapter.pdf
In every group, there is an element $E$, such that $$EA = AE = A$$ for every member $A$ of the group.</description></item><item><title>Quaternion double cover</title><link>https://salehahr.github.io/zettelkasten/rotations/quaternion-double-cover/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/quaternion-double-cover/</guid><description>Parent: Quaternion index Source: Solà 2017 $$ \mathbf{q} = \left[ \begin{array}{c} q_w\ \mathbf{q}_v \end{array} \right] = \left[ \begin{array}{c} \cos\frac{\phi}{2} \ \mathbf{u} \sin\frac{\phi}{2} \end{array} \right] $$ where $\phi$ is the angle rotated by $\mathbf{q}$ on objects in the 3D space $\mathbb{R}^3$.
Recap $\theta$ is the angle in quaternion space (s. unit quaternions ) $\phi$ as the angle in 3D space $\mathbb{R}^3$ Therefore, the angle is halved in quaternion space. $$\theta = \phi / 2$$</description></item><item><title>Baumgarte stabilisation over the SO(3) rotation group for control</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/baumgarte-stabilisation-over-the-so-3-rotation-group-for-control/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/baumgarte-stabilisation-over-the-so-3-rotation-group-for-control/</guid><description>Author: Sebastien Gros</description></item><item><title>Baumgarte stabilisation over the SO(3) rotation group for control</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/baumgarte-stabilisation-over-the-so-3-rotation-group-for-control/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/baumgarte-stabilisation-over-the-so-3-rotation-group-for-control/</guid><description>Author: Sebastien Gros</description></item><item><title>50.4.1 Additive quaternion filtering</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/50.4.1-additive-quaternion-filtering/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/50.4.1-additive-quaternion-filtering/</guid><description>Parents: Quaternion index , which orientation parametrisation to-choose? Source: Markley 2014 Additive quaternion filtering Additive quaternion error Methods of enforcing the normalisation Renormalise the estimate by brute force Modify KF update equations to enforce a norm constraint using a Lagrange multiplier
[1] and [2] yield biased estimates of the quaternion
Methods that don&amp;rsquo;t enforce normalisation Define the rotation matrix to be guarantees orthogonality introduces unobservable DOF: the quaternion norm Use the above equation without the ||q||-2 factor &amp;ndash;&amp;gt; no orthogonality</description></item><item><title>Euler axis/angle representation</title><link>https://salehahr.github.io/zettelkasten/rotations/euler-axis-angle-representation/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/euler-axis-angle-representation/</guid><description>Parents: rotations-so3-group-index , orientation-parametrisations See also: Rotation vector representation Source: Markley 2014 3 parameters:
there appears to be 4 parameters: 1 angle, 3-component unit vector (Euler axis, Euler angle of the rotation) however, the vector $\mathbf{e}$ is a unit vector (constrained by $\left\lVert \mathbf{e} \right\rVert = 1$ To rotation matrix The matrix is periodic (period 2*pi) From rotation matrix If -1 &amp;lt; cos theta &amp;lt; 1: If cos theta = 1: axis undefined</description></item><item><title>Gibbs / Rodrigues parameter representation for rotations</title><link>https://salehahr.github.io/zettelkasten/rotations/gibbs-rodrigues-parameter/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/gibbs-rodrigues-parameter/</guid><description>Parent: Orientation parametrisations See also: Rotation error representation Source: Markley 2014 From unit quaternions : From euler-axis-angle-representation : To unit quaternions :   Plane of the figure contains identity quaternion , origin The circle is a cross section of the quaternion sphere S^3 The upper horizontal axis is the 3D Gibbs vector hyperplane (tangent at the identity quaternion) [+] q and -q map to the same Gibbs vector, therefore there is a 1:1 mapping of rotations between quaternions and the Gibbs parameter [-] the Gibbs vector is infinite for 180 degree rotations (q.</description></item><item><title>Gibbs / Rodrigues parameter representation for rotations</title><link>https://salehahr.github.io/zettelkasten/rotations/gibbs-rodrigues-parameter/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/gibbs-rodrigues-parameter/</guid><description>Parent: Orientation parametrisations See also: Rotation error representation Source: Markley 2014 From unit quaternions : From euler-axis-angle-representation : To unit quaternions :   Plane of the figure contains identity quaternion , origin The circle is a cross section of the quaternion sphere S^3 The upper horizontal axis is the 3D Gibbs vector hyperplane (tangent at the identity quaternion) [+] q and -q map to the same Gibbs vector, therefore there is a 1:1 mapping of rotations between quaternions and the Gibbs parameter [-] the Gibbs vector is infinite for 180 degree rotations (q.</description></item><item><title>Intrinsic vs extrinsic rotations</title><link>https://salehahr.github.io/zettelkasten/rotations/intrinsic-vs-extrinsic-rotations/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/intrinsic-vs-extrinsic-rotations/</guid><description>Parent: Rotations/SO(3) Group Index See also: Active/passive or Alibi/alias rotation transformations Source: http://rock-learning.github.io/pytransform3d/transformation_ambiguities.html We want to rotate first by $R_1$, then by $R_2$.
Extrinsic rotation In global coordinates, extrinsic rotation: $R_2 \cdot R_1$
Intrinsic rotation In local coordinates, intrinsic rotation: $R_1 \cdot R_2$
($R_1$ defines new coordinates in which $R_2$ is applied)
Specifying the convention is relevant when dealing with Euler angles!!!</description></item><item><title>Quaternion to rotation matrix</title><link>https://salehahr.github.io/zettelkasten/rotations/quaternion-to-rotation-matrix/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/quaternion-to-rotation-matrix/</guid><description>Parents: quaternion-index , rotations-so3-group-index See also: orientation-parametrisations Source: Markley 2014 Unit quaternion to rotation matrix</description></item><item><title>Rotation error representation</title><link>https://salehahr.github.io/zettelkasten/rotations/rotation-error-representation/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/rotation-error-representation/</guid><description>Parents: rotations-so3-group-index , quaternion-index See also: Orientation parametrisations , which orientation parametrisation to-choose? Source: Markley 2014 Note:
Only for small angle approximations! all these representations are equivalent through second order as In terms of&amp;hellip;
Rotation vector Quaternions Euler angles Use upper sign if {i,j,k} even permutation of {1,2,3}, lower sign otherwise
gibbs-rodrigues-parameter . MRPs. etc.</description></item><item><title>Rotation error representation</title><link>https://salehahr.github.io/zettelkasten/rotations/rotation-error-representation/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/rotation-error-representation/</guid><description>Parents: rotations-so3-group-index , quaternion-index See also: Orientation parametrisations , which orientation parametrisation to-choose? Source: Markley 2014 Note:
Only for small angle approximations! all these representations are equivalent through second order as In terms of&amp;hellip;
Rotation vector Quaternions Euler angles Use upper sign if {i,j,k} even permutation of {1,2,3}, lower sign otherwise
gibbs-rodrigues-parameter . MRPs. etc.</description></item><item><title>Rotation vector representation</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/rotation-vector-representation/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/rotation-vector-representation/</guid><description>Parents: rotations-so3-group-index , orientation-parametrisations Source: Markley 2014 Combine the Euler axis/angle into a three component rotation vector $$ \mathbf{\theta} \equiv \theta \mathbf{e}$$
Convenient for analysis, but not for computation</description></item><item><title>Rotations / SO(3) group index</title><link>https://salehahr.github.io/zettelkasten/rotations/rotations-so3-group-index/</link><pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/rotations-so3-group-index/</guid><description>Group theory SE(3) Special Euclidian Group SO(3) 3D rotation group Lie group, Lie algebra Exponential map Logarithm map Ambiguities in rotation representations Active/passive or Alibi/alias rotation transformations Intrinsic vs extrinsic rotations Rotation representations Orientation parametrisations Rotation error representation Which orientation parametrisation to choose? Linearisation of an orientation in SO(3) As Euler angles Euler angles Rotations as xyz Bryan-Tait angles (Kardanwinkel) Axis/angle Euler axis/angle representation As quaternions Quaternion index Quaternion to rotation matrix Kinematics Kinematics primer Chaining rotation matrices and angular velocities IMU specific IMU preintegration on manifold To read https://rip94550.</description></item><item><title>Active/passive or Alibi/alias rotation transformations</title><link>https://salehahr.github.io/zettelkasten/rotations/active-passive-or-alibi-alias-rotation-transformations/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/active-passive-or-alibi-alias-rotation-transformations/</guid><description>Parent: Rotations / SO(3) group index See also: Intrinsic vs extrinsic rotations Source: http://en.wikipedia.org/wiki/Rotation_matrix%20-%20Ambiguities
Alibi / Active Alias / Passive CS is fixed CS is rotated Point rotates within fixed CS Point remains stationary but is represented within a new CS Counterclockwise rotation by theta mathematics physics, robotics Source: http://rock-learning.</description></item><item><title>Euler angles</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/euler-angles/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/euler-angles/</guid><description>Parents: rotations-so3-group-index , orientation-parametrisations Source: Phil&amp;rsquo;s Lab Three angles that describe the orientation of an object w.r.t. a fixed coordinate system Roll $\phi$, Pitch $\theta$, Yaw $\psi$ Source: http://en.wikipedia.org/wiki/Euler_angles Possible representations Proper Euler angles (e.g. $zxz$) vs Tait-Bryan (e.g. $xyz$, $zyx$) Intrinsic vs. extrinsic rotations Extrinsic rotations (around fixed CS $xyz$) Intrinsic rotations (around body CS $XYZ = x''' y''' z'''$) As a rotation matrix $$R = X(\alpha) Y(\beta) Z(\gamma)$$</description></item><item><title>Which orientation parametrisation to choose?</title><link>https://salehahr.github.io/zettelkasten/rotations/20.4-which-orientation-parametrisation/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/20.4-which-orientation-parametrisation/</guid><description>Source: MKok 2017 Estimation algorithms (filtering, smoothing) usually assume that the unknown states and parameters are represented in Euclidean space
Due to wrapping and gimbal lock, Euclidian addition and subtraction don&amp;rsquo;t work Also generally don&amp;rsquo;t work for rotation matrices and unit quaternions Constraints (unit quaternion norm, rotation matrix orthogonality) are usually hard to implement in estimation algorithms These concerns led to the development of the MEKF .
To deal with this: Linearisation of an orientation in SO(3) Alternative method to estimate orientation:</description></item><item><title>Whampsey MEKF</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/whampsey-mekf/</link><pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/whampsey-mekf/</guid><description>Source: http://matthewhampsey.github.io/blog/2020/07/18/mekf
Motivation Working with noisy IMU measurements IMUs usually provide redundant information that can be used to improve dead-reckoning Uses: Hamilton quaternion convention .
Which orientation parametrisation to choose? 50.5-error-state-kalman-filter</description></item><item><title>Converting IMU data to inertial frame</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/converting-imu-data-to-inertial-frame/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/converting-imu-data-to-inertial-frame/</guid><description>Parent: IMU index Source: http://redshiftlabs.com.au/wp-content/uploads/2018/02/an-1005_-_understanding_euler_angles.pdf IMU outputs are in the body frame of the sensor.
Convention used in the article: yaw/psi (z) - pitch/theta (y) - roll/phi (x) around momentary axes Momentary coordinate systems: W -&amp;gt; W' -&amp;gt; W'' -&amp;gt; B Body acceleration to inertial acceleration W_a = R_WB @ B_a
Body angular rate to inertial angular rate
Each angular rate must be converted to the corresponding frame p: gyro_z -&amp;gt; rotated into W: R_w_w' @ R_w'_w'' @ R_w''_B @ q q: gyro_y -&amp;gt; rotated into W': R_w'_w'' @ R_w''_B @ q r: gyro_x -&amp;gt; rotated into W'': R_w''_B @ r with Gimbal lock: pitch approaches +-90, terms divided by cos90</description></item><item><title>Exponential map</title><link>https://salehahr.github.io/zettelkasten/rotations/exponential-map/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/exponential-map/</guid><description>Parents: Quaternion index , Rotations / SO(3) group index Notation Variables $$\begin{alignedat}{3} &amp;amp;\phi &amp;amp;&amp;amp;\in \mathbb{R}^3\
&amp;amp;\phi^\wedge &amp;amp;&amp;amp;\in \mathfrak{so}(3)\
&amp;amp;\mathbf{R} &amp;amp;&amp;amp;\in \text{SO}(3)\
\end{alignedat}$$
Functions $$\begin{alignedat}{3} \text{(skew) } \wedge &amp;amp;:&amp;amp; \mathbb{R}^3 &amp;amp;&amp;amp;\rightarrow \mathfrak{so}(3) &amp;amp;\
\exp &amp;amp;:&amp;amp; ~&amp;amp;&amp;amp;\mathfrak{so}(3) &amp;amp;\rightarrow \text{SO}(3)\
\text{Exp} &amp;amp;:&amp;amp; ~\mathbb{R}^3 &amp;amp;&amp;amp; &amp;amp;\rightarrow \text{SO}(3) \end{alignedat}$$
Thus, $$\begin{alignedat}{3} &amp;amp;\exp(\phi^\wedge) = \text{Exp}(\phi) = \mathbf{R} \end{alignedat}$$
Source: Forster 2017 IMU Preintegration At the identity Maps an element of the Lie algebra ($\phi^\wedge \in \mathfrak{so}(3)$, a skew symmetric matrix) to a rotation First order approximation $$ \exp(\phi^\wedge) \approx \mathbf{I} + \phi^\wedge$$</description></item><item><title>Exponential map</title><link>https://salehahr.github.io/zettelkasten/rotations/exponential-map/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/exponential-map/</guid><description>Parents: Quaternion index , Rotations / SO(3) group index Notation Variables $$\begin{alignedat}{3} &amp;amp;\phi &amp;amp;&amp;amp;\in \mathbb{R}^3\
&amp;amp;\phi^\wedge &amp;amp;&amp;amp;\in \mathfrak{so}(3)\
&amp;amp;\mathbf{R} &amp;amp;&amp;amp;\in \text{SO}(3)\
\end{alignedat}$$
Functions $$\begin{alignedat}{3} \text{(skew) } \wedge &amp;amp;:&amp;amp; \mathbb{R}^3 &amp;amp;&amp;amp;\rightarrow \mathfrak{so}(3) &amp;amp;\
\exp &amp;amp;:&amp;amp; ~&amp;amp;&amp;amp;\mathfrak{so}(3) &amp;amp;\rightarrow \text{SO}(3)\
\text{Exp} &amp;amp;:&amp;amp; ~\mathbb{R}^3 &amp;amp;&amp;amp; &amp;amp;\rightarrow \text{SO}(3) \end{alignedat}$$
Thus, $$\begin{alignedat}{3} &amp;amp;\exp(\phi^\wedge) = \text{Exp}(\phi) = \mathbf{R} \end{alignedat}$$
Source: Forster 2017 IMU Preintegration At the identity Maps an element of the Lie algebra ($\phi^\wedge \in \mathfrak{so}(3)$, a skew symmetric matrix) to a rotation First order approximation $$ \exp(\phi^\wedge) \approx \mathbf{I} + \phi^\wedge$$</description></item><item><title>Lie group, Lie algebra</title><link>https://salehahr.github.io/zettelkasten/rotations/lie-group-lie-algebra/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/lie-group-lie-algebra/</guid><description>Lie group Parent: Rotations / SO(3) group index Source: http://www.seas.upenn.edu/~meam620/slides/kinematicsI.pdf
A group that is a differentiable (smooth) manifold is called a Lie group.
Lie algebra Source: http://en.wikipedia.org/wiki/3D_rotation_group Lie algebra $\mathfrak{so}(3)$
Every Lie group has an associated Lie algebra Lie algebra: linear space with same dimension as the Lie group Consists of all skew-symmetric 3x3 matrices Elements of the Lie algebra $\mathfrak{so}(3)$ are elements of the tangent space of the manifold SO(3)/Lie group at the identity element .</description></item><item><title>Logarithm map</title><link>https://salehahr.github.io/zettelkasten/rotations/logarithm-map/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/logarithm-map/</guid><description>Parents: Quaternion index , rotations / so(3) group-index Backlinks: Linearisation of an orientation in SO(3) Source: Forster 2017 IMU Preintegration Maps a rotation matrix $R$ in SO(3) to a skew-symmetric matrix ( Lie algebra ) Perturbations, first order approximation S. Forster [2015] suppplementary material for the inverse Jacobian
Source: MKok 2017 Approximations for small perturbations</description></item><item><title>Logarithm map</title><link>https://salehahr.github.io/zettelkasten/rotations/logarithm-map/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/logarithm-map/</guid><description>Parents: Quaternion index , rotations / so(3) group-index Backlinks: Linearisation of an orientation in SO(3) Source: Forster 2017 IMU Preintegration Maps a rotation matrix $R$ in SO(3) to a skew-symmetric matrix ( Lie algebra ) Perturbations, first order approximation S. Forster [2015] suppplementary material for the inverse Jacobian
Source: MKok 2017 Approximations for small perturbations</description></item><item><title>Smooth polymial trajectory generation</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/smooth-polymial-trajectory-generation/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/smooth-polymial-trajectory-generation/</guid><description>Source: FLS handouts</description></item><item><title>Differentiation in different coordinate systems</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/differentiation-in-different-coordinate-systems/</link><pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/differentiation-in-different-coordinate-systems/</guid><description>Source: Woernle Mehrkörpersysteme Backlinks: Kinematics primer</description></item><item><title>Equations for obtaining omega (angular velocity) and acceleration of IMU from camera</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/equations-for-obtaining-omega-angular-velocity-and-acceleration-of-imu-from-camera/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/equations-for-obtaining-omega-angular-velocity-and-acceleration-of-imu-from-camera/</guid><description>Parent: Update 2021-06-11</description></item><item><title>Obtaining IMU measurements from camera by forward kinematics</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/obtaining-imu-measurements-from-camera-by-forward-kinematics/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/obtaining-imu-measurements-from-camera-by-forward-kinematics/</guid><description>Parent: SA TODO Backlinks: Thesis restructure Done:
reverse-fwkin (scrapped) omega_B symbolic check links in BC and CB config — new diagrams (split up into &amp;gt;=2 bodies?) check om_B = om_C + om_CB (s. [http://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters Kinematics](http://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters Kinematics), Woernle ) save om_B to container obtain accel. (s. [http://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters Kinematics](http://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters Kinematics), Kinematics primer ) where (ang. vel of body j w.r.t. body i, expressed in CS k)  Chaining velocities and accelerations: [validation] reconstruct rot_B from om_B, compare with camera debug first reconstruction of IMU traj, if that doesn&amp;rsquo;t work debug the fake data generation - update readme update robot model with simplification around pivot point validate updated model Anhang</description></item><item><title>Equations of motion IMU to camera</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/kinematics-equations-of-motion-imu-to-camera/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/kinematics-equations-of-motion-imu-to-camera/</guid><description>Backlinks: Discussion 2021-06-01 R_WB = R_WC * R_CB
Notes: ref http://docs.sympy.org/latest/modules/physics/vector/vectors.html for vector calculus (symbolic)</description></item><item><title>Forward kinematics IMU to camera</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/forward-kinematics-imu-to-camera/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/forward-kinematics-imu-to-camera/</guid><description>Backlinks: [Discussion 2021-05-21](discussion 2021-05-21.md), discussion-2021-06-01 , update-2021-06-11 Simplified model (rigid)</description></item><item><title>Inverse of a homogeneous transformation matrix</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/inverse-of-a-homogeneous-transformation-matrix/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/inverse-of-a-homogeneous-transformation-matrix/</guid><description>Parent: Kinematics primer Source: http://mathematica.stackexchange.com/questions/106257/how-do-i-get-the-inverse-of-a-homogeneous-transformation-matrix</description></item><item><title>Modified vs original DH</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/modified-vs-original-dh/</link><pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/modified-vs-original-dh/</guid><description>Wikipedia
Modified DH (proximal) Original DH (distal?) a: offset in x (from old origin)alpha: twist of z around old x axisd: offset in z (to next origin)theta: rotation around current z d: offset in z (from prev origin)theta: rotation around prev zr / a: offset in x from prev originalp: twist of z around current x</description></item><item><title>Spherical wrist</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/spherical-wrist/</link><pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/spherical-wrist/</guid><description>http://www1.cs.columbia.edu/~allen/F15/NOTES/forwardspong.pdf
S. also http://www.youtube.com/watch?v=S6TFakW5YcI</description></item><item><title>(Woernle) Mehrkoerpersysteme</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/woernle-mehrkoerpersysteme/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/woernle-mehrkoerpersysteme/</guid><description>Author: Christoph Woernle Contents:
Kinematics, kinetics (Dynamik) Some basics Converting velocity from CS1 to CS0 Chaining rotation matrices and angular velocities [Poisson equation for skew symmetric matrix of angular velocity](poisson equation for skew-symmetric-matrix-of-angular-velocity.md) Differentiation in different coordinate systems Kinematics primer Reversed kinematics relations Rotations as xyz Bryan-Tait angles (Kardanwinkel) Holonomic systems, non-holonomic systems Holonomic constraints</description></item><item><title>Chaining rotation matrices and angular velocities</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/chaining-rotation-matrices-and-angular-velocities/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/chaining-rotation-matrices-and-angular-velocities/</guid><description>Source: Woernle Mehrkörpersysteme Backlinks: [Kinematics primer](kinematics primer.md), [obtaining imu measurements from camera by forward kinematics](obtaining imu measurements-from-camera-by-forward-kinematics.md) See also: Rotations / SO(3) group index Chaining rotation matrices T_02 transforms a point in CS2 to CS0
compare: Chaining homogeneous transformation matrices Chaining angular velocities (in same CS) ang.vel. of 2 rel to 0 = ang.vel. of 1 rel. to 0 + ang.vel. of 2 rel. to 1</description></item><item><title>Chaining rotation matrices and angular velocities</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/chaining-rotation-matrices-and-angular-velocities/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/chaining-rotation-matrices-and-angular-velocities/</guid><description>Source: Woernle Mehrkörpersysteme Backlinks: [Kinematics primer](kinematics primer.md), [obtaining imu measurements from camera by forward kinematics](obtaining imu measurements-from-camera-by-forward-kinematics.md) See also: Rotations / SO(3) group index Chaining rotation matrices T_02 transforms a point in CS2 to CS0
compare: Chaining homogeneous transformation matrices Chaining angular velocities (in same CS) ang.vel. of 2 rel to 0 = ang.vel. of 1 rel. to 0 + ang.vel. of 2 rel. to 1</description></item><item><title>Converting velocity from CS1 to CS0</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/converting-velocity-from-cs1-to-cs0/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/converting-velocity-from-cs1-to-cs0/</guid><description>Source: Woernle Mehrkörpersysteme Backlinks: [Kinematics primer](kinematics primer.md), [poisson equation for skew symmetric matrix of angular velocity](poisson equation for skew-symmetric-matrix-of-angular-velocity.md)
Linear velocity This is the derivative of r relative to CS0, as depicted in CS0 coordinates
Where the expression in square brackets means: the derivative of r relative to CS0, as depicted in CS1 coordinates
Angular velocity with : ang.vel. of D relative to B, given in E coordinates
Note : </description></item><item><title>Kinematics primer</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/kinematics-primer/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/kinematics-primer/</guid><description>Source: Hibbeler Dynamics , woernle-mehrkörpersysteme See also: Reversed kinematics relations , denavit-hartenberg-convention Backlinks: [Obtaining IMU measurements from camera by forward kinematics](obtaining imu measurements from camera by forward kinematics.md), rotations / so(3) group-index Prereqs:
Chaining rotation matrices and angular velocities Converting velocity from CS1 to CS0 [Poisson equation for skew symmetric matrix of angular velocity](poisson equation for skew-symmetric-matrix-of-angular-velocity.md) Inverse of a homogeneous transformation matrix Differentiation in different coordinate systems Position (in world coordinates)velocity (in world coordinates)where the skew symmetric matrix is the angular velocity of cs1 relative to cs0,(~~given in cs1 coordinates?</description></item><item><title>Modified Denavit-Hartenberg convention</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/modified-denavit-hartenberg-convention/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/modified-denavit-hartenberg-convention/</guid><description>Source: Craig - Introduction to Robotics Backlinks: Kinematics primer Note: s. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1083.6428&amp;amp;rep=rep1&amp;amp;type=pdf for comparison (Lipkin)
Link-frame attachment
Identify joint axes
For joint axes i and i+1, identify the  common perpendicular + where it meets axis i, or point of intersection and let this be the link-frame origin Let Z_i point along the i-th joint axis
Let X_i
point along common perpendicular, or be normal to the plane containing the two axes Assign Y_i (right hand coordinate system)</description></item><item><title>Poisson equation for skew symmetric matrix of angular velocity</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/poisson-equation-for-skew-symmetric-matrix-of-angular-velocity/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/poisson-equation-for-skew-symmetric-matrix-of-angular-velocity/</guid><description>Source: Woernle Mehrkörpersysteme Backlinks: [Kinematics primer](kinematics primer.md), converting velocity from cs1 to cs0 Skew-symmetric angular velocity: Poisson equation</description></item><item><title>Reversed kinematics relations</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/reversed-kinematics-relations/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/reversed-kinematics-relations/</guid><description>Source: Woernle Mehrkörpersysteme See also: Kinematics primer PositionVelocity(given that omega_00 = 0)(given that v_00 = 0)Accelerationgiven , , </description></item><item><title>Rotations as xyz Bryan-Tait angles (Kardanwinkel)</title><link>https://salehahr.github.io/zettelkasten/rotations/bryan-tait-kardanwinkel/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/bryan-tait-kardanwinkel/</guid><description>Parent: rotations-so3-group-index Source: Woernle Rotation angle nomenclature Euler angles: ZXZ (mitgedrehte Achsen) Kardan-Winkel [de] / Bryan-Tait angles: ZYX (mitgedrehte Achsen) xyz-Kardan-Winkel K3: körperfestes KS K0: Welt-KS
Ausgangslage 1. Drehung um x0 2. Drehung um y1 3. Drehung um z2 Winkelgeschwindigkeit
(either depicted in CS0, or CS3)</description></item><item><title>IMU on cystoscope</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/diagram-imu-on-cystoscope/</link><pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/diagram-imu-on-cystoscope/</guid><description>Backlinks: Discussion 2021-05-21</description></item><item><title>50.5.1.1 States of the ESKF for estimating IMU pose</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/50.5.1.1-states-of-the-eskf-for-estimating-imu-pose/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/50.5.1.1-states-of-the-eskf-for-estimating-imu-pose/</guid><description>Parent: IMU index Source: Solà 2017 Quaternion kinematics for ESKF Full state Vector with 19 elements The corresponding kinematics equations/motion model is given in IMU kinematic equations/motion model .
Notes The angular error in 3D space is given by the notation $\delta\mathbf{\theta}$.
(s. rotation-error-representation )
The angular error $\delta\mathbf{\theta}$ is defined locally w.r.t. the nominal orientation (classical approach used in most IMU-integration works).
A more optimal approach may be to use a globally-defined angular error.</description></item><item><title>Identity quaternion</title><link>https://salehahr.github.io/zettelkasten/rotations/identity-quaternion/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/identity-quaternion/</guid><description>Parent: Quaternion index Source: Solà 2017 $$\mathbf{q}_I = 1 = \left[ \begin{array}{c} 1\ \mathbf{0}_3 \end{array} \right]$$
$$\mathbf{q}_I \otimes \mathbf{q} = \mathbf{q} \otimes \mathbf{q}_I = \mathbf{q}$$</description></item><item><title>Inverse quaternion</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/inverse-quaternion/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/inverse-quaternion/</guid><description>Parent: Quaternion index Source: Solà 2017 Quaternion kinematics for ESKF The inverse is the conjugate in case of unit quaternions</description></item><item><title>Quaternion conventions</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-conventions/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-conventions/</guid><description>Parent: Quaternion index Source: Solà 2017 Quaternion kinematics for ESKF Source: [ Wikipedia ], markley-2014 For quaternion multiplication : change the order to transform between conventions Hamilton Shuster Transpose of the Hamiltonian version</description></item><item><title>Quaternion differentiation</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-differentiation/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-differentiation/</guid><description>Parent: Quaternion index Source: J. D. Hol — Sensor fusion and calibration of inertial sensors, vision, ultra-wideband and GPS
Using the identities: http://math.stackexchange.com/questions/189185/quaternion-differentiation Numerical differentiation (Euler)
http://math.stackexchange.com/questions/1896379/how-to-use-the-quaternion-derivative
$$ \begin{aligned} q(t+dt) &amp;amp;= q(t) \otimes dq\
\dfrac{dq}{dt} &amp;amp;= \frac{1}{2} \omega \otimes q \quad \text{with } \omega = \left[ \begin{array}{cccc} 0 &amp;amp; \omega_x &amp;amp; \omega_y &amp;amp; \omega_z \end{array} \right]^\text{T} \end{aligned}$$
Integrating this, assuming $\omega=\text{const.}$ from $t_0$ to $t_0 + dt$: $$ \begin{aligned} q(t) &amp;amp;= q(t_0) \exp \left( \frac{1}{2} \omega \cdot \left( t - t_0\right) \right)\</description></item><item><title>Quaternion index</title><link>https://salehahr.github.io/zettelkasten/rotations/quaternion-index/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/quaternion-index/</guid><description>Notation Quaternion conventions Basic math/properties Quaternion multiplication Identity quaternion Quaternion conjugate Quaternion norm Inverse quaternion Unit quaternions Double cover Calculus Quaternion differentiation As rotation rotations-so3-group-index exponential-map logarithm-map orientation-parametrisations Which-orientation-parametrisation linearisation-of-an-orientation-in-so-3 Quaternion to rotation matrix Rotation error representation For filtering Additive-quaternion-filtering Multiplicative-quaternion-filtering-mekf Literature Solà 2017 Quaternion kinematics for ESKF MKok 2017 Using inertial sensors for position and orientation estimation</description></item><item><title>Quaternion multiplication</title><link>https://salehahr.github.io/zettelkasten/rotations/quaternion-multiplication/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/quaternion-multiplication/</guid><description>Parent: Quaternion index Source: Solà 2017 Quaternion kinematics for ESKF Here: Hamiltonian convention, s. Quaternion conventions Non-commutative  Associative  Distributive Multiplication as a matrix product With
the matrices the skew operator (skew symmetric matrix) s. also cross product Source: Markley 2014 with the matrices</description></item><item><title>Quaternion norm</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-norm/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-norm/</guid><description>Parent: Quaternion index Source: Solà 2017 Quaternion kinematics for ESKF With the property</description></item><item><title>Unit quaternions</title><link>https://salehahr.github.io/zettelkasten/rotations/unit-quaternions/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/unit-quaternions/</guid><description>Parent: Quaternion index , orientation-parametrisations See also: quaternion-conventions , quaternion double cover Source: Solà 2017 Properties $$ \begin{aligned} \left\lVert \mathbf{q} \right\rVert &amp;amp;= 1\
\mathbf{q}^{-1} &amp;amp;= \mathbf{q}^* \end{aligned} $$
Can be written in the form $$ \mathbf{q} = \left[ \begin{array}{c} \cos\theta \ \mathbf{u} \sin\theta \end{array} \right] $$
with
$\mathbf{u}$ as a unit vector $\theta$ is the angle between $\mathbf{q}$ and the identity quaternion $\mathbf{q}_I = \left[\begin{array}{cccc}1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\end{array}\right]^\text{T}$</description></item><item><title>IMU data generation from camera/visual data</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/imu-data-generation-from-camera-visual-data/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/imu-data-generation-from-camera-visual-data/</guid><description>Parent: IMU index Source: [MKok 2017 Using inertial sensors for position and orientation estimation](mkok 2017 using inertial sensors-for-position-and-orientation-estimation.md)</description></item><item><title>IMU to camera coordinate transformations</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/imu-to-camera-coordinate-transformations/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/imu-to-camera-coordinate-transformations/</guid><description>Parent: IMU index Source: Weiss 2011</description></item><item><title>Quaternion conjugate</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-conjugate/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/quaternion-conjugate/</guid><description>Parent: Quaternion index Source: http://en.wikipedia.org/wiki/Quaternion
Flip signs of vector part
Source: Solà 2017 Quaternion kinematics for ESKF Multiplying with own conjugate (scalar!)
Conjugate operation on quaternion products</description></item><item><title>Transforming velocities to another frame</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/transforming-velocities-to-another-frame/</link><pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/transforming-velocities-to-another-frame/</guid><description>http://physics.stackexchange.com/questions/197009/transform-velocities-from-one-frame-to-an-other-within-a-rigid-body
Transforming velocities to another frame Further reading: http://core.ac.uk/download/pdf/154240607.pdf</description></item><item><title>Discretising a state space equation</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/discretising-a-state-space-equation/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/discretising-a-state-space-equation/</guid><description>Source: [http://en.wikibooks.org/wiki/Control_Systems/State-Space_Equations
Discretization](http://en.wikibooks.org/wiki/Control_Systems/State-Space_Equations Discretization) Discretising a state space equation</description></item><item><title>note quaternions</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/note-quaternions/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/note-quaternions/</guid><description>Converting from quaternion to angular velocity then back to quaternion http://math.stackexchange.com/questions/2282938/converting-from-quaternion-to-angular-velocity-then-back-to-quaternion</description></item><item><title>Linearisation of an orientation in SO(3)</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/linearisation-of-an-orientation-in-so-3/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/linearisation-of-an-orientation-in-so-3/</guid><description>Parents: Rotations / SO(3) group index , Quaternion index , orientation-parametrisations Source: MKok 2017 Rotation of a vector in SO(3)
The SO(3) group is a Lie group , so there exists an exponential map from a corresponding Lie algebra to the SO(3) group a reverse logarithm map Possible to represent orientations using unit quaternions or rotation matrices in SO(3) — linearisation point orientation deviations $\eta_t$ I think this is a global representation</description></item><item><title>Linearisation of an orientation in SO(3)</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/linearisation-of-an-orientation-in-so-3/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/linearisation-of-an-orientation-in-so-3/</guid><description>Parents: Rotations / SO(3) group index , Quaternion index , orientation-parametrisations Source: MKok 2017 Rotation of a vector in SO(3)
The SO(3) group is a Lie group , so there exists an exponential map from a corresponding Lie algebra to the SO(3) group a reverse logarithm map Possible to represent orientations using unit quaternions or rotation matrices in SO(3) — linearisation point orientation deviations $\eta_t$ I think this is a global representation</description></item><item><title>Orientation parametrisations</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/orientation-parametrisations/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/orientation-parametrisations/</guid><description>Parents: rotations-so3-group-index , quaternion index , probabilistic models-for-imu See also: Rotation error representation Source: MKok 2017 , markley-2014 Orientation parametrisations
Note: CCW rotation of a vector $x_v$ to $x_u$ corresponds to a CW rotation of the CS $v$ to CS $u$ (see also active/passive transformations ). Rotations are a member of SO(3) rotation matrix unique description of orientation Euler axis/angle Rotation vector not unique, due to wrapping Euler angles not unique, due to wrapping and gimbal lock Unit quaternions not unique, -q and q depict the same orientationProof: http://math.</description></item><item><title>Orientation parametrisations</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/orientation-parametrisations/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/orientation-parametrisations/</guid><description>Parents: rotations-so3-group-index , quaternion index , probabilistic models-for-imu See also: Rotation error representation Source: MKok 2017 , markley-2014 Orientation parametrisations
Note: CCW rotation of a vector $x_v$ to $x_u$ corresponds to a CW rotation of the CS $v$ to CS $u$ (see also active/passive transformations ). Rotations are a member of SO(3) rotation matrix unique description of orientation Euler axis/angle Rotation vector not unique, due to wrapping Euler angles not unique, due to wrapping and gimbal lock Unit quaternions not unique, -q and q depict the same orientationProof: http://math.</description></item><item><title>On quaternions and rotation matrices</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/on-quaternions-and-rotation-matrices/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/on-quaternions-and-rotation-matrices/</guid><description>http://stackoverflow.com/questions/8919086/why-are-quaternions-used-for-rotations
It&amp;rsquo;s worth bearing in mind that all the properties related to rotation are not truly properties of Quaternions: they&amp;rsquo;re properties of Euler-Rodrigues Parameterisations, which is the actual 4-element structure used to describe a 3D rotation. Their relationship to Quaternions is purely due to a paper by Cayley, &amp;ldquo;On certain results related to Quaternions&amp;rdquo;, where the author observes the correlation between Quaternion multiplication and combination of Euler-Rodrigues parameterisations. This enabled aspects of Quaternion theory to be applied to the representation of rotations and especially to interpolating between them.</description></item><item><title>On quaternions and rotation matrices</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/on-quaternions-and-rotation-matrices/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/on-quaternions-and-rotation-matrices/</guid><description>http://stackoverflow.com/questions/8919086/why-are-quaternions-used-for-rotations
It&amp;rsquo;s worth bearing in mind that all the properties related to rotation are not truly properties of Quaternions: they&amp;rsquo;re properties of Euler-Rodrigues Parameterisations, which is the actual 4-element structure used to describe a 3D rotation. Their relationship to Quaternions is purely due to a paper by Cayley, &amp;ldquo;On certain results related to Quaternions&amp;rdquo;, where the author observes the correlation between Quaternion multiplication and combination of Euler-Rodrigues parameterisations. This enabled aspects of Quaternion theory to be applied to the representation of rotations and especially to interpolating between them.</description></item><item><title>Gauss-Newton Method on Manifold</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/gauss-newton-method-on-manifold/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/gauss-newton-method-on-manifold/</guid><description>Source: Forster 2017 IMU Preintegration Standard approach for optimization on manifold
define a retraction to reparametrise the problem (lifting) retraction bijective map map between an element of the tangent space at x and a neighbourhood of x on the manifold i.e. we work in the tangent space (locally like a Euclidian space) and apply standard optimisation techniques for Gauss-Newton specifically: [ts] squared cost around current estimate [ts] solve the quadratic approximation &amp;ndash;&amp;gt; we get vector in tangent space [m] update the current guess on the manifold  Consider: Reparametrised: Retraction for SE(3) The exponential map of SE(3) as a retraction is possible, but may not be convenient (computationally)</description></item><item><title>Manifolds</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/manifolds/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/manifolds/</guid><description>Source: https://www.euclideanspace.com/maths/geometry/space/surfaces/manifold/index.htm
Like a surface in $n$-dimensions (hypersurface) An $n$-dim manifold looks like $\mathbb{R}^n$ locally (locally Euclidian) Circle: 1-dim manifold. If we zoom around a point on the circle, it looks like a line ($\mathbb{R}^1$) Sphere: 2-dim manifold. Zooming onto a point, it looks like a plane ($\mathbb{R}^2$) Source: https://www.seas.upenn.edu/~meam620/slides/kinematicsI.pdf
An $n$-dim manifold is a a set $M$ which is locally homeomorphic to $\mathbb{R}^n$</description></item><item><title>SE(3) Special Euclidian Group</title><link>https://salehahr.github.io/zettelkasten/rotations/se3-special-euclidian-group/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/se3-special-euclidian-group/</guid><description>Source: Forster 2017 &amp;ndash; IMU Preintegration Group of rigid motion in 3D.
Consists of
a rotation in SO(3) a translation in $\mathbb{R}^3$ $$\begin{aligned} \text{SE}(3) \dot{=} \left\lbrace \left(\mathbf{R}, \mathbf{p} \right) : \mathbf{R} \in \text{SO}(3), \mathbf{p} \in \mathbb{R}^3 \right\rbrace \end{aligned}$$
$$\begin{aligned} \mathbf{T}_1\mathbf{T}_2 &amp;amp;= \left( \mathbf{R}_1\mathbf{R}_2, \mathbf{R}_1\mathbf{p}_2 + \mathbf{p}_1 \right)\
\mathbf{T}_1^{-1} &amp;amp;= \left( \mathbf{R}_1^\text{T}, -\mathbf{R}_1^{\text{T}}\mathbf{p}_1 \right) \end{aligned}$$</description></item><item><title>SO(3) 3D rotation group</title><link>https://salehahr.github.io/zettelkasten/rotations/so3-3d-rotation-group/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/rotations/so3-3d-rotation-group/</guid><description>Parent: Rotations / SO(3) group index See also: Orientation parametrisations , Linearisation of an orientation , Solà 2017 quaternion kinematics for eskf Source: MKok 2017 All orthogonal matrices with dim 3x3 have the property
$$RR^\text{T} = R^\text{T}R = I_3$$ They are part of the orthogonal group O(3) If, additionally, $\det R = 1$, then the matrix belongs to SO(3) and is a rotation matrix Source: http://en.wikipedia.org/wiki/3D_rotation_group The SO(3) group</description></item><item><title>Spaces in mathematics</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/spaces-in-mathematics/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/spaces-in-mathematics/</guid><description>Source: http://upload.wikimedia.org/wikiversity/en/c/cd/Spaces_in_mathematics.pdf Types of spaces in mathematics
Euclidian spaces (3D space, 2D space/Euclidian plane) Linear spaces Topological spaces Hilbert spaces etc. What is a space?
No real definition Made of selected mathematical objects which are treated as points selected relationships between these points Points can be elements of a set functions subspaces Isomorphic spaces are considered identical Isomorphism between two spaces: one-to-one mapping between the points, that preserves the relationships between the points</description></item><item><title>Error ellipse/Confidence ellipse</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/error-ellipse-confidence-ellipse/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/error-ellipse-confidence-ellipse/</guid><description>Parent: Multivariate Gaussian distributions Source: rlabbe Kalman/Bayesian filters in Python Any slice through a multivariate Gaussian is an ellipse Plots show the slice for 3 standard deviations
Showing correlation using error ellipses</description></item><item><title>Showing correlation using error ellipses</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/showing-correlation-using-error-ellipses/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/showing-correlation-using-error-ellipses/</guid><description>Parent: Error ellipse/Confidence ellipse Source: rlabbe Kalman/Bayesian filters in Python A slanted ellipse implies correlation
The &amp;lsquo;thinner&amp;rsquo; side isn&amp;rsquo;t necessarily more accurate, it just means that the spread of data is reduced along this dimension (when viewing sensor data, for example) Example First epoch Yellow: prior (very uncertain about position) Green: evidence (more accurate in one of the dimensions than the other; more certainty compared to prior) Blue: posterior via multiplication Posterior retains the shape of the evidence (which has more certainty than the prior)</description></item><item><title>50.2. Bayes' Theorem</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/50.2.-bayes-theorem/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/50.2.-bayes-theorem/</guid><description>Parent: Bayesian Filter Update Step Source: rlabbe Kalman/Bayesian filters in Python How do we compute the probability of an event given previous information? (s. also Frequentist vs Bayesian statistics )
Formula to compute new information into existing information
Used in the update step of a Bayesian filter (valid for both probabilities as well as probability distributions) where || . || expresses normalisation
B Evidence (sensor measurements z) p(A) Prior p(B|A) Likelihood p(A|B) Posterior In filtering systems, computing p(x|z) is nearly impossible, but computing p(z|x) is fairly straightforward, which then facilitates the computation of p(x|z) via the Bayes' theorem formula.</description></item><item><title>Central Limit Theorem</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/central-limit-theorem/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/central-limit-theorem/</guid><description>Parent: Gaussian distribution Source: rlabbe Kalman/Bayesian filters in Python If we make many measurements, the measurements will be normally distributed. (only applies under certain conditions)</description></item><item><title>Computational properties of Gaussian distributions</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/computational-properties-of-gaussian-distributions/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/computational-properties-of-gaussian-distributions/</guid><description>Parent: Gaussian distribution Backlinks: Showing correlation using error ellipses Source: rlabbe Kalman/Bayesian filters in Python g1 + g2 = g3; all are Gaussians g1 * g2 = g3; g3 is not Gaussian, but proportional to a Gaussian Sum of two Gaussians Product of two Gaussians: Product of multidimensional Gaussians:</description></item><item><title>Correlation and independence</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/correlation-and-independence/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/correlation-and-independence/</guid><description>Parent: Gaussian distribution Source: rlabbe Kalman/Bayesian filters in Python Independent variables are uncorrelated. But the reverse is not always true: uncorrelated variables may be dependent on one another e.g. y=x^2 has no [linear] correlation, but y depends on x nonetheless</description></item><item><title>Empirical rule 68/95/99.7</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/empirical-rule-68-95-99.7/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/empirical-rule-68-95-99.7/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python Emprical rule, a.k.a. 68–95–99.7 rule About 68% of all values lie within one standard deviation of the mean.</description></item><item><title>Frequentist vs Bayesian statistics</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/frequentist-vs-bayesian-statistics/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/frequentist-vs-bayesian-statistics/</guid><description>Parent: Discrete Bayesian filter Source: rlabbe Kalman/Bayesian filters in Python Frequentist vs Bayesian statistics
Probability of flipping a fair coin infinitely many times is 50% - frequentist Probability of flipping a fair coin one more time (which way do I believe it landed?), single event - Bayesian Bayesian statistics takes past information (prior) into account If finding the prior is tricky, frequentist techniques are sometimes used e.</description></item><item><title>Gaussian distribution</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/gaussian-distribution.1/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/gaussian-distribution.1/</guid><description>Backlinks: Limitations of the discrete Bayes filter Source: rlabbe Kalman/Bayesian filters in Python a.k.a. Normal distribution Unimodal, continuous probability distribution function (pdf)
The probability of a range of measurements is the area under the graph of the probability distribution between the end values of the range &amp;ndash; cumulative distribution function (cdf)
Background statistics Variance, standard deviation, covariances Central Limit Theorem Correlation and independence Types Univariate Gaussian distribution Multivariate Gaussian distributions Computational properties of Gaussian distributions Pros and cons of Gaussian distributions</description></item><item><title>Multivariate Gaussian distributions</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/multivariate-gaussian-distributions/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/multivariate-gaussian-distributions/</guid><description>Parent: Gaussian distribution Source: rlabbe Kalman/Bayesian filters in Python See also: Probability distribution N means for N dimensions Variances are now also combined with covariances (to take into account correlation between different dimensions)
Variance: how does a population vary amongst themselves? Covariance: how much do two variables change relative to each other? The correlation helps prediction!
Here: only linear correlation considered; however nonlinear correlations also exist.
Error ellipse/Confidence ellipse</description></item><item><title>Probability distribution</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/probability-distribution/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/probability-distribution/</guid><description>Parent: Discrete Bayesian filter Source: rlabbe Kalman/Bayesian filters in Python Probability distribution:
collection of all possible probabilities for an event the distribution lists all possible events and the probability of each sum up to 1 Prior probability distribution: probability prior to incorporating any measurements or other information
Joint probability P(x,y):
probability of both events happening the multivariate Gaussian distribution is already already a joint probability distribution Marginal probability:</description></item><item><title>Pros and cons of Gaussian distributions</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/pros-and-cons-of-gaussian-distributions/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/pros-and-cons-of-gaussian-distributions/</guid><description>Parent: Gaussian distribution Source: rlabbe Kalman/Bayesian filters in Python Big advantage of using Gaussian distributions (as opposed to discrete ones w/ histogram bins): less data, b/c a Gaussian distribution is represented fully using only two values: the mean and the variance Limitations of using Gaussian distributions to model the world i.e. deviations from the central limit theorem
Not all situations are describable by Gaussian distributions e.g. sensors in the real world have fat tails (kurtosis) — don&amp;rsquo;t extend to infinity and skew Can&amp;rsquo;t depict any arbitrary probability distributions like in e.</description></item><item><title>Random variable</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/random-variable/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/random-variable/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python Combination of values + associated probabilities. &amp;ldquo;Event&amp;rdquo; e.g. die toss, height of students e.g. in a fair die values = {1, 2, &amp;hellip;, 6} (range of values = sample space) probabilities = {1/6} * 6</description></item><item><title>Univariate Gaussian distribution</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/univariate-gaussian-distribution/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/univariate-gaussian-distribution/</guid><description>Parent: Gaussian distribution Source: rlabbe Kalman/Bayesian filters in Python If normalised (area under the graph is 1): Gaussian distribution If not normalised: Gaussian function Notation: The random variable X has a Gaussian distribution with mean &amp;hellip; and variance &amp;hellip; .</description></item><item><title>Variance, standard deviation, covariances</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/variance-standard-deviation-covariances/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/variance-standard-deviation-covariances/</guid><description>Backlinks: Multivariate Gaussian distributions Source: rlabbe Kalman/Bayesian filters in Python See also: Empirical rule 68/95/99.7 How much do the values vary from the mean?
There are other ways of calculating variance (e.g. by using absolute values of error instead of error squared). The other methods may be better w.r.t. outliers (outliers get magnified in the square term) Process variance: error in the process model Sensor variance: error in each sensor measurement</description></item><item><title>Expected value</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/expected-value/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/expected-value/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python Example: if we take a thousand sensor readings, the readings won&amp;rsquo;t always be the same (due to the inherent noise).
The expected value &amp;lsquo;averages&amp;rsquo; all of the readings into a single value. This can be a mean (probabilities of all values assumed equal) Or if incorporating individual and different probabilities, the expectation isn&amp;rsquo;t the mean of the range of values Proven: the average of a large number of measurements will be very close to the actual weight</description></item><item><title>Conditional independence</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/conditional-independence/</link><pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/conditional-independence/</guid><description>Source: http://en.wikipedia.org/wiki/Conditional_independence A and B are conditionally independent given C If and only if, given the knowledge that C occurs, the knowledge of whether A occurs provides no information whatsoever on the likelihood of B occurring, and vice versa
Example Weather and delay
Let the two events be the probabilities of persons A and B getting home in time for dinner
The third event C is the fact that a snow storm hit the city.</description></item></channel></rss>