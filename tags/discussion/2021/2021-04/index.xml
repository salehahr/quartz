<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>discussion/2021/2021-04 on</title><link>https://salehahr.github.io/zettelkasten/tags/discussion/2021/2021-04/</link><description>Recent content in discussion/2021/2021-04 on</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><atom:link href="https://salehahr.github.io/zettelkasten/tags/discussion/2021/2021-04/index.xml" rel="self" type="application/rss+xml"/><item><title>40.1 IMU measurement model</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/40.1-imu-measurement-model/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/40.1-imu-measurement-model/</guid><description>Parent: [IMU index](imu index.md), probabilistic models-for-imu Backlinks: [IMU motion model](imu motion model.md), imu kinematic model using euler integration An IMU measures, relative to an inertial frame, acceleration and rotation rate.
The measurements are corrupted by bias and noise (often assumed to be white Gaussian noise ). mkok-2017 Additionally, the acceleration measured is affected by gravity. Note the [assumptions in modelling the true angular velocity in IMUs](assumptions in modelling the-true-angular-velocity-in-imus.</description></item><item><title>Besprechung 2021-04-01</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/besprechung-2021-04-01/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/besprechung-2021-04-01/</guid><description>Agenda
Recap: last meeting (2021-03-15) Offline Kalman — after this works, do a &amp;lsquo;live&amp;rsquo; implementation on DefSLAM run
IMU measurements as [acc, gyro] readings
With noise, but without considering bias, IMU-cam transformation, gravity Two sets of measurements for filter: IMU measurements, DefSLAM (camera) measurements
KF prediction using random walk
Recap: SLAM +filtering terminology (loose coupling, tight coupling) Literature Original suggestion using random walk model Interface (DefSLAM, Python) read: OK write: to do Offline Kalman as a separate repo Good papers?</description></item><item><title>note KF with missing measurements</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/note-kf-with-missing-measurements/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/note-kf-with-missing-measurements/</guid><description>Sources http://math.stackexchange.com/questions/982982/kalman-filter-with-missing-measurement-inputs http://opencv-users.1802565.n2.nabble.com/Kalman-filters-and-missing-measurements-td2886593.html
For a missing measurement:
use the last state estimate as a measurement set the covariance matrix of the measurement to essentially infinity. This would cause a Kalman filter to essentially ignore the new measurement since the ratio of the variance of the prediction to the measurement is zero. The result will be a new prediction that maintains velocity/acceleration but whose variance will grow according to the process noise.</description></item><item><title>IMU motion model (discrete)</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/imu-motion-model-discrete/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/imu-motion-model-discrete/</guid><description>Parent: [IMU index](imu index.md), probabilistic models-for-imu Source: [MKok 2017 Using inertial sensors for position and orientation estimation](mkok 2017 using inertial sensors-for-position-and-orientation-estimation.md)
Position dynamics Orientation dynamics (either quaternion or rotation matrix representation) with</description></item><item><title>MKok 2017 Using inertial sensors for position and orientation estimation</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/mkok-2017/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/mkok-2017/</guid><description>Source: http://arxiv.org/abs/1704.06053 Authors: M Kok, JD Hol, TB Schön
Abstract
Contents/Chapters Quaternions Probabilistic models for IMU Orientation parametrisations Which orientation parametrisation to choose? Linearisation of an orientation in SO(3) IMU measurement model Modelling noise and bias for IMU IMU motion models IMU prior models</description></item><item><title>Orientation parametrisations</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/orientation-parametrisations/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/orientation-parametrisations/</guid><description>Parent: [Rotations / SO(3) group index](rotations _ so(3) group index.md), [quaternion index](quaternion index.md), probabilistic models-for-imu See also: Rotation error representation Source: [MKok 2017 Using inertial sensors for position and orientation estimation](mkok 2017 using inertial sensors-for-position-and-orientation-estimation.md)
Orientation parametrisations
Note: CCW rotation of a vector x_v to x_u corresponds to a CW rotation of the CS v to CS u. Rotations in R^3 are a member of the special orthogonal group SO(3) rotation matrix unique description of orientation Euler axis/angle rotation-vector not unique, due to wrapping Euler angles not unique, due to wrapping and gimbal lock Unit quaternions not unique, -q and q depict the same orientationProof: http://math.</description></item><item><title>Besprechung 2021-03-15</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/besprechung-2021-03-15/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/besprechung-2021-03-15/</guid><description>Status
Last week: generated noisy IMU data (pose) from stereo trajectory, &amp;lsquo;offline&amp;rsquo; Kalman This week: Kalman + &amp;lsquo;live&amp;rsquo; DefSLAM Still to do: design KF (EKF, or other methods&amp;hellip;) &amp;lsquo;Offline&amp;rsquo; Kalman
To learn how to use openCV&amp;rsquo;s Kalman filter without having to rebuild DefSLAM every time Aim was to figure out the update/correction workflow and implement it in live DefSLAM run
Uses pre-extracted trajectories (mono and stereo)</description></item></channel></rss>