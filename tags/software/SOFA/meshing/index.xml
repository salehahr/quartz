<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software/SOFA/meshing on</title><link>https://salehahr.github.io/quartz/tags/software/SOFA/meshing/</link><description>Recent content in software/SOFA/meshing on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://salehahr.github.io/quartz/tags/software/SOFA/meshing/index.xml" rel="self" type="application/rss+xml"/><item><title>Mesh topology</title><link>https://salehahr.github.io/quartz/studienarbeit/mesh-topology/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/mesh-topology/</guid><description>Source: SOFA extended documentation Parent: Data structure in SOFA See also: Mesh geometry Mesh topology: how the vertices are connected to each other (using what element?)
Hierarrchy of mesh topology: Topology objects consist of four functional members which creates/modifies/gets topology arrays/geometrical information:
Container Modifier Algorithms Geometry Topological mapping:
Define a new mesh topology from an existing one, using the same DOFs e.g. for subsetting a set of nodes, edges, or to split quads into 2 triangles each these topologies are therefore assigned to the same MechanicalState</description></item><item><title>Mesh geometry</title><link>https://salehahr.github.io/quartz/studienarbeit/mesh-geometry/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/mesh-geometry/</guid><description>Source: SOFA extended documentation Parent: Data structure in SOFA See also: Mesh topology Mesh geometry: location of vertices in space
Meshes
k-simplices (triangles) k-cubes (quads) --&amp;gt; decomposition into k-cells
1-cell: edges 2-cells: triangles, quads 3-cells: tetrahedron, hexahedron Mesh data:
containers, similar to STL std::vector classes there are as many data structures for mesh data as topological elements , e.g. vertices, edges, triangles, quads, tetras, hexas e.</description></item></channel></rss>