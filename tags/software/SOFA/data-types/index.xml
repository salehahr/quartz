<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software/SOFA/data-types on</title><link>https://salehahr.github.io/quartz/tags/software/SOFA/data-types/</link><description>Recent content in software/SOFA/data-types on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://salehahr.github.io/quartz/tags/software/SOFA/data-types/index.xml" rel="self" type="application/rss+xml"/><item><title>Barycentric coordinates</title><link>https://salehahr.github.io/quartz/studienarbeit/barycentric-coordinates/</link><pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/barycentric-coordinates/</guid><description>Source: SOFA extended documentation Baclinks: [Top-down mapping (master to slave)](top-down mapping (master to slave).md), lamarca-2019-defslam Barycentre: centre of mass A coordinate system, in which the location of point of a simplex (line, triangle, tetrahedron, etc) is specified as the centre of mass of the masses placed at its vertices x_i vertices of a simplex p a point in space The a_i coefficients are the barycentric coordinates of p w.</description></item><item><title>Scene graph (general)</title><link>https://salehahr.github.io/quartz/studienarbeit/scene-graph-general/</link><pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/scene-graph-general/</guid><description>Source: http://en.wikipedia.org/wiki/Scene_graph See also: Scene graph in SOFA A general data structure Collection of nodes in a graph/tree</description></item><item><title>Scene graph in SOFA</title><link>https://salehahr.github.io/quartz/studienarbeit/scene-graph-in-sofa/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/scene-graph-in-sofa/</guid><description>Source: SOFA extended documentation Parent: Data structure in SOFA Backlinks: SOFA Introduction See also: Scene graph (general) Pool of simulated objects and algorithms in a hierarchical data structure Scenes can be built procedurally or read from XML files Root node represents whole simulation Graph is processed by using visitors A scene graph node
Gathers components associated with the same DOFs/topology Connections between non-sibling components require explicit references Example: The collision spheres of the rigid object are in a child contact node of their own, because they are not independent DOFs (separate from independent DOFs in MechanicalState ) they are of a different data type Interactions between the rigid and deformable objects are handled by a shared component (ContactSpring) defined as a sibling node to both (coupling) Soft coupling using penalty forces Can be modelled by a constant interaction force (assumption) during each time step Compatible with all explicit time intergration schemes Hard coupling using penalty forces / constraint-based interaction via Lagrange multipliers Stiff interaction forces Implicit integration necessary, for large time steps without any instabilities Generally more efficient to process independent interaction groups using separate solvers</description></item><item><title>Visitors</title><link>https://salehahr.github.io/quartz/studienarbeit/visitors/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/visitors/</guid><description>Source: [SOFA extended documentation](SOFA extended documentation.md) Parent: [Data structure in SOFA](Data structure in SOFA.md) Backlinks: [Scene graph in SOFA](Scene graph in SOFA.md), [Simulation algorithms in SOFA](Simulation algorithms in SOFA.md)
For processing of data structure: parent to child
Allows decoupling of physical model from simulation algo e.g. Easy to replace a time integrator, which wouldn&amp;rsquo;t be the case in a dataflow graph (coupling of data and algo)</description></item></channel></rss>