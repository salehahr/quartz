<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software/python on</title><link>https://salehahr.github.io/tags/software/python/</link><description>Recent content in software/python on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://salehahr.github.io/tags/software/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Importing a fork in Python instead of installed package</title><link>https://salehahr.github.io/studienarbeit/importing-a-fork-in-python-instead-of-installed-package/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/importing-a-fork-in-python-instead-of-installed-package/</guid><description>http://stackoverflow.com/questions/23075397/python-how-to-edit-an-installed-package
Run this in repo that uses the fork (this installs the package as a submodule): python3 -m pip install -e git+[ssh://git@github-feudalism/feudalism/spatialmath-python.git
egg=f-spatialmath](ssh://git@github-feudalism/feudalism/spatialmath-python.git egg=f-spatialmath) &amp;ndash;upgrade Instructions:
Fork the package repo cd to own repo where you want to use the package Install the fork using the above pip install command. This creates ./src/submodule When making changes to fork: make changes in either the submodule folder (for immediate effect), or in the fork subdirectory + push + reinstall</description></item><item><title>ORBSLAM2 mods</title><link>https://salehahr.github.io/studienarbeit/orbslam2-mods/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/orbslam2-mods/</guid><description>Patch to work with opencv4 http://github.com/Windfisch/ORB_SLAM2 ORBSLAM2 Python bindings http://github.com/jskinn/ORB_SLAM2-PythonBindings</description></item><item><title>Pipenv venv in project folder</title><link>https://salehahr.github.io/studienarbeit/pipenv-venv-in-project-folder/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/pipenv-venv-in-project-folder/</guid><description>PIPENV_VENV_IN_PROJECT=1
Powershell: $Env:PIPENV_VENV_IN_PROJECT=&amp;ldquo;1&amp;rdquo;</description></item><item><title>(AtsushiSakai) PythonRobotics</title><link>https://salehahr.github.io/studienarbeit/atsushisakai-pythonrobotics/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/atsushisakai-pythonrobotics/</guid><description>http://nbviewer.jupyter.org/github/AtsushiSakai/PythonRobotics/</description></item><item><title>SofaPython Index</title><link>https://salehahr.github.io/studienarbeit/sofapython-index/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/sofapython-index/</guid><description>Building/setup Building SOFA on Windows Someone&amp;rsquo;s SP3 setup Running Running SOFA with Python Using python with existing scene Basic python script in Sofa Initialising graph in SP3 Plugins Possible plugins Install ROSConnector in SOFA STLIB (Sofa Template Library) Registration Communication Sending data using sockets Sockets Errno 10054 External data in SOFA Documentation SofaPython API/Documentation links Cheatsheet</description></item><item><title>Sending data using sockets</title><link>https://salehahr.github.io/studienarbeit/sending-data-using-sockets/</link><pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/sending-data-using-sockets/</guid><description>Parent: SofaPython Index http://github.com/psomers3/PyDataSocket
http://docs.python.org/3/howto/sockets.html Sockets: form of IPC (inter-process communication), for cross-platform communication (Alternatives, for fast IPC: pipes, shared memory)
“client” socket - an endpoint of a conversation e.g. browser, other client applications “server” socket, which is more like a switchboard operator. The client application (your browser, for example) uses e.g. web server (uses both server and client sockets) Roughly, how a socket works (ex: clicking a link on the browser) Client socket (browser) / Receive</description></item><item><title>SofaPython API/Documentation links</title><link>https://salehahr.github.io/studienarbeit/sofapython-api-documentation-links/</link><pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/sofapython-api-documentation-links/</guid><description>Parent: SofaPython Index SP2
SofaPython pdf http://www.sofa-framework.org/api/master/plugins/SofaPython/html/index.html http://sofacomponents.readthedocs.io/en/latest/index.html SP3
http://sofapython3.readthedocs.io/en/latest/menu/SofaPlugin.html</description></item><item><title>Basic python script in Sofa</title><link>https://salehahr.github.io/studienarbeit/basic-python-script-in-sofa/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/basic-python-script-in-sofa/</guid><description>Parent: SofaPython Index Imports import Sofa
General functions
createGraph(self, root) reset() onKeyPressed() &amp;hellip; Required in every script: createScene(rootNode)
Create a child from a node node.createChild(&amp;lsquo;Name&amp;rsquo;)
Add an object component to the node: node.createObject(type in string, kwargs**)</description></item><item><title>Running SOFA with Python</title><link>https://salehahr.github.io/studienarbeit/running-sofa-with-python/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/running-sofa-with-python/</guid><description>Parent: SofaPython Index From command line Add to path environment and then execute runSofa via command line
With a python script runSofa -l SofaPython ./script_name.py
How to make SofaPython loaded by default? In bin/plugin_list.conf? Yes sofa-launcher might be useful With pipenv pipenv run runsofa</description></item><item><title>Running SOFA with Python</title><link>https://salehahr.github.io/studienarbeit/running-sofa-with-python/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/running-sofa-with-python/</guid><description>Parent: SofaPython Index From command line Add to path environment and then execute runSofa via command line
With a python script runSofa -l SofaPython ./script_name.py
How to make SofaPython loaded by default? In bin/plugin_list.conf? Yes sofa-launcher might be useful With pipenv pipenv run runsofa</description></item><item><title>Using python with existing scene</title><link>https://salehahr.github.io/studienarbeit/using-python-with-existing-scene/</link><pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/using-python-with-existing-scene/</guid><description>Parent: SofaPython Index In scene graph
Add plugin in the scene using RequiredPlugin Define a PythonScriptController in the scene graph</description></item></channel></rss>