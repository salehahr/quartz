<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SLAM/filter-vs-optim on Zettelkasten</title><link>https://salehahr.github.io/zettelkasten/tags/SLAM/filter-vs-optim/</link><description>Recent content in SLAM/filter-vs-optim on Zettelkasten</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><atom:link href="https://salehahr.github.io/zettelkasten/tags/SLAM/filter-vs-optim/index.xml" rel="self" type="application/rss+xml"/><item><title>Handling the computational complexity of optimisation-based SLAM</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/handling-the-computational-complexity-of-optimisation-based-slam/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/handling-the-computational-complexity-of-optimisation-based-slam/</guid><description>Parent: SLAM Index Source: Forster 2017 IMU Preintegration Complexity of nonlinear batch optimisation
The trajectory and the map, which comprise the states, grow with time The larger the SLAM problem, the less feasible it is to perform the optimisation in real-time Solutions to improve computational efficiency
Keyframe-based methods: discard frames except for a few selected keyframes Run the optimisation parallelly (e.g. tracking and mapping threads) Fixed-lag smoothing: Use of a local map of fixed size, with marginalisation of the old states (summarise the old states into a prior term) Filtering is a special case of this: window of size 1, i.</description></item><item><title>Filter-based vs optimisation-based SLAM</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/filter-based-vs-optimisation-based-slam/</link><pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/filter-based-vs-optimisation-based-slam/</guid><description>Parent: SLAM Index Source: Scaradozzi 2018 SLAM application in surgery Main paradigms of SLAM
Filters — Kalman filters , Particle filters Graph-based SLAM Estimate the entire trajectory and the map from the full set of measurements (full SLAM) Which SLAM algorithm to use? Depends on application
map resolution update time (real time or not) type of environment type of sensors available</description></item><item><title>Particle filters</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/particle-filters/</link><pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/particle-filters/</guid><description>Parent: Filter localisation methods Source: Wikipedia Lokalisierung Particle filter / Monte Carlo localisation / sequential Monte Carlo methods
allow solution of all three localisation problems POSE represented by a particle cloud Each particle : possible POSE The filter checks the plausibility of each particle Increases and decreases the probabilities of each particle accordingly When a lower probability threshold is exceeded, the particle is not considered any longer Source: Scaradozzi 2018 SLAM application in surgery Particle filters (sequential Monte Carlo)</description></item><item><title>Filter localisation methods</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/filter-localisation-methods/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/filter-localisation-methods/</guid><description>Parent: SLAM Index Backlinks: [Back-end optimisation](back-end optimisation.md), [what is slam?](what is slam_.md), filter-based vs-optimisation-based-slam Source: [Wu 2018 Image-based camera localization: an overview](wu 2018-image-based-camera-localization_-an-overview.md) EKF to propagate and update motion states of visual-inertial sensors
Source: Scaradozzi 2018 SLAM application in surgery Filtering techniques in SLAM
Augment/refine the position estimates and map estimates by incorporating new measurements when they become available Generally online, due to their incremental nature Types Kalman filters Particle filters</description></item><item><title>Some optimisation-based tightly-coupled multisensor SLAM algorithms</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/some-optimisation-based-tightly-coupled-multisensor-slam-algorithms/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/some-optimisation-based-tightly-coupled-multisensor-slam-algorithms/</guid><description>Parent: SLAM Index Source: [Wu 2018 Image-based camera localization: an overview](wu 2018-image-based-camera-localization_-an-overview.md)
Uses nonlinear optimization may potentially achieve higher accuracy due to the capability to limit linearization errors through repeated linearization of the inherently nonlinear problem
[117] Forster: preintegration theory [118] OKVIS: a novel approach to tightly integrate visual measurements with IMU optimise a joint nonlinear cost function that integrates an IMU error term with the landmark reprojection error in a fully probabilistic manner real-time operation: old states are marginalized to maintain a bounded-sized optimization window Li et al.</description></item></channel></rss>