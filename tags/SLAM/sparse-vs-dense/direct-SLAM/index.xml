<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SLAM/sparse-vs-dense/direct-SLAM on Zettelkasten</title><link>https://salehahr.github.io/zettelkasten/tags/SLAM/sparse-vs-dense/direct-SLAM/</link><description>Recent content in SLAM/sparse-vs-dense/direct-SLAM on Zettelkasten</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><atom:link href="https://salehahr.github.io/zettelkasten/tags/SLAM/sparse-vs-dense/direct-SLAM/index.xml" rel="self" type="application/rss+xml"/><item><title>Dense/direct VSLAM</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/dense-direct-vslam/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/dense-direct-vslam/</guid><description>Parent: Visual SLAM Implementation Framework ,Â slam_index See also: Feature-based vs direct SLAM workflow Source: [Cometlabs What You Need to Know About SLAM](cometlabs what you-need-to-know-about-slam.md)
Front-end part of the Visual SLAM Implementation Framework Use most or all of the pixels in each received frame Provide more information about the environment Many more pixels, require GPUs Feature-based vs direct SLAM workflow Disadvantages: Don&amp;rsquo;t handle outliers very well (outliers will be processed and implemented into the final map) Slower than feature-based variants Aims to minimise photometric error (intensity differences) Semi-dense</description></item></channel></rss>