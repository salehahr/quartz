<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SLAM/loop-detection on</title><link>https://salehahr.github.io/tags/SLAM/loop-detection/</link><description>Recent content in SLAM/loop-detection on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://salehahr.github.io/tags/SLAM/loop-detection/index.xml" rel="self" type="application/rss+xml"/><item><title>Loop closing in VIORB</title><link>https://salehahr.github.io/studienarbeit/loop-closing-in-viorb/</link><pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/loop-closing-in-viorb/</guid><description>Parent: SLAM Index Source: Mur-Artal 2017 VI-ORB Overview
To reduce drift accumulated during exploration (when returning to an already mapped location) Loop detection: of large loops using place recognition Loop correction: first do lightweight pose-graph optimisation (PGO), then do full BA in a separate thread (in order not to interfere with real-time operations) Implementation
After loop detection: do match validation (alignment of points between keyframes) Then pose-graph optimisation to reduce the accumulated error in trajectory (PGO: pose-only, ignores IMU info) IMU info ignored, but velocities are corrected by rotating them according to keyframe orientation &amp;ndash;&amp;gt; suboptimal, but should be accurate enough to allow IMU data to be used right after the PGO in ORBSLAM: PGO is 7-DoF optimisation (due to scale + 3 rot + 3 xyz) in VIORB, 6 DoF (scale is known from initialisation bzw.</description></item><item><title>Loop closure detection</title><link>https://salehahr.github.io/studienarbeit/loop-closure-detection/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/loop-closure-detection/</guid><description>Parent: VSLAM Framework , slam-index Source: cometlabs Backlinks: Step 2: Re-observation Process of observing the same scene by non-adjacent frames and adding a constraint (relationship? association?) between them A long-term data association in the VSLAM Framework (part of front end) Sort of incorporates topological SLAM into metric SLAM Importance
Final refinement step (in data association) Important for obtaining a globally consistent SLAM solution, especially when optimising over a long period of time Basic loop closure detection Match the current frame to all previous frames using feature matching</description></item><item><title>Precision recall curve</title><link>https://salehahr.github.io/studienarbeit/precision-recall-curve/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/precision-recall-curve/</guid><description>Parent: Loop closure detection Source: cometlabs used to better quantify the performance (balance between false positives and false negatives in loop closure detection ) highlights tradeoff between precision and recall precision (absence of false positives) but may lead to the appearance of false negatives recall (prediction power) e.g. tweaking to improve recall increases sensitivity to similarities in the image thus increases possibility of false positives</description></item></channel></rss>