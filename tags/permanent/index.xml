<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>-permanent on</title><link>https://salehahr.github.io/quartz/tags/permanent/</link><description>Recent content in -permanent on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 18 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://salehahr.github.io/quartz/tags/permanent/index.xml" rel="self" type="application/rss+xml"/><item><title>50.2.3 Kalman filter initial estimates</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.3-kalman-filter-initial-estimates/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.3-kalman-filter-initial-estimates/</guid><description>Source: [Schneider 2013 How to not make the EKF fail](schneider 2013 how to-not-make-the-ekf-fail.md)
Initial state estimate x0, P0
Filter generally not badly affected by wrong initial state x0, but convergence will be slow if we are way off
If P0 too small whereas x0 is way off
the gain K becomes small filter relies on the model more than on the measurements Thus: important to have a consistent pair x0, P0</description></item><item><title>50.2.40 Kalman filter performance metric</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.40-kalman-filter-performance-metric/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.40-kalman-filter-performance-metric/</guid><description>Source: [Schneider 2013 How to not make the EKF fail](schneider 2013 how to-not-make-the-ekf-fail.md)
k: time / step j: how many EKF runs? in tutorial: EKF was ran 1000 times (non-deterministic system due to noise)</description></item><item><title>50.4.1 Additive quaternion filtering</title><link>https://salehahr.github.io/quartz/studienarbeit/50.4.1-additive-quaternion-filtering/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.4.1-additive-quaternion-filtering/</guid><description>Parents: [Quaternion index](quaternion index.md), which orientation parametrisation to-choose? Source: Markley 2014 Additive quaternion filtering Additive quaternion error Methods of enforcing the normalisation
Renormalise the estimate by brute force Modify KF update equations to enforce a norm constraint using a Lagrange multiplier
[1] and [2] yield biased estimates of the quaternion
Methods that don&amp;rsquo;t enforce normalisation
Define the rotation matrix to be guarantees orthogonality introduces unobservable DOF: the quaternion norm Use the above equation without the ||q||-2 factor &amp;ndash;&amp;gt; no orthogonality</description></item><item><title>50.4.2 Multiplicative quaternion filtering (MEKF)</title><link>https://salehahr.github.io/quartz/studienarbeit/50.4.2-multiplicative-quaternion-filtering-mekf/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.4.2-multiplicative-quaternion-filtering-mekf/</guid><description>See also: Which orientation parametrisation to choose? Source: Markley 2014 Main idea is to use
the quaternion as a global rotation representation
a three component state vector as the local representation of rotation errors each term (q_true, delta_q, q_est) is a normalised unit quaternion
Any of the rotation error representations can be used to calculate delta_theta, which is part of the error state of the MEKF.</description></item><item><title>50.7.2 Calculation of K and P in ESKF update</title><link>https://salehahr.github.io/quartz/studienarbeit/50.7.2-calculation-of-k-and-p-in-eskf-update/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.7.2-calculation-of-k-and-p-in-eskf-update/</guid><description>Parent: 50.3 Error-State Kalman Filter , eskf-update See also: Evaluation of the H Jacobian Source: Solà 2017 Quaternion kinematics for ESKF The filter correction equations are (yields a posteriori estimates)
Notes:
Here, the simplest form of the covariance update is used. This has poor numerical stability, however (no guarantee of symmetricity or positive definiteness) More stable forms are e.g. Joseph form (symmetric and positive) Error correction?</description></item><item><title>Which orientation parametrisation to choose?</title><link>https://salehahr.github.io/quartz/permanent/20.4-which-orientation-parametrisation-to-choose/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/permanent/20.4-which-orientation-parametrisation-to-choose/</guid><description>Parents: Permanent notes , Rotations/SO(3) group index , quaternion-index , orientation-parametrisations Backlinks: ESKF See also: Rotation error representation Source: MKok 2017 Estimation algorithms (filtering, smoothing) usually assume that the unknown states and parameters are represented in Euclidean space
Due to wrapping and gimbal lock, Euclidian addition and subtraction don&amp;rsquo;t work Also generally don&amp;rsquo;t work for rotation matrices and unit quaternions Constraints (unit quaternion norm, rotation matrix orthogonality) are usually hard to implement in estimation algorithms These concerns led to the development of the MEKF .</description></item><item><title>30.1.2 Endoscope</title><link>https://salehahr.github.io/quartz/permanent/30.1.2-endoscope/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/permanent/30.1.2-endoscope/</guid><description>Source: NHS Backlinks: Endoscopes The general term for the medical instrument used to perform endoscopy is, correspondingly, the endoscope. It is a device that makes use of optical technology to relay images from one end of the scope to another.
Functions are  not only for looking inside, but also have additional functionalities such as removing small tissue samples (biopsy) Insertion either through
natural body orifices (e.g. mouth, urethra) small incision in case a keyhole surgery is being performed</description></item><item><title>30.1.2.2 Endoscope system components</title><link>https://salehahr.github.io/quartz/studienarbeit/30.1.2.2-endoscope-system-components/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/30.1.2.2-endoscope-system-components/</guid><description>Source: Leiner Backlinks: Endoscopes Imaging system (rod lens array for rigid endoscopes) within a tube/shaft
Illumination/Light source (it&amp;rsquo;s dark inside the body)
separate from the imaging system in order to reduce glare [low contrast of received image] surrounds the imaging system like a ring light Video camera
Coupling device (camera to imaging system)
Sheath and bridge which contain the telescope, fibre optics, and provides a channel for other stuff like irrigation, forceps, other surgical instruments</description></item><item><title>30.1.2.3 Endoscope specification</title><link>https://salehahr.github.io/quartz/studienarbeit/30.1.2.3-endoscope-specification/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/30.1.2.3-endoscope-specification/</guid><description>Source: Leiner Backlinks: Endoscopes Field of view: maximum angle that can be viewed Leiner Generally constructed so that the FOV is wide enough so that the &amp;lsquo;head on&amp;rsquo; view is visible even when the DOV is not zero. Leiner This is to reduce the chances of bumping the instrument into anatomy right in front of the shaft. Leiner Direction of view: angular offset of the optical axis from the longitudinal axis of the endoscope shaft</description></item><item><title>Endoscopes</title><link>https://salehahr.github.io/quartz/permanent/30-endoscopes/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/permanent/30-endoscopes/</guid><description>Backlinks: Leiner Endoscopy and bladder cancery surgery
Relate endoscopy to bladder cancery surgery &amp;hellip; Procedure:
Cystoscopy to inspect the bladder If tumour is found, do resection &amp;ndash;&amp;gt; cryosection Cancer detected &amp;ndash;&amp;gt; tumour removal Endoscopy Endoscopes (general) Types of endoscopes Endoscope system components Endoscope specification</description></item><item><title>Endoscopy</title><link>https://salehahr.github.io/quartz/permanent/30.1.1-endoscopy/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/permanent/30.1.1-endoscopy/</guid><description>Source: NHS Backlinks: Endoscopes Endoscopy is a procedure which enables inspection of organs inside the body. The prefix &amp;lsquo;endo&amp;rsquo; comes from the Greek language and means &amp;lsquo;within&amp;rsquo; or &amp;lsquo;inside&amp;rsquo;, cf. the prefix &amp;lsquo;exo&amp;rsquo;/&amp;lsquo;ecto&amp;rsquo; meaning &amp;lsquo;outside&amp;rsquo;. Endo- from Greek ἔνδον (within, inside), cf. exo-/ecto- from έκτός (outside) The instrument: endoscope</description></item><item><title>Types of endoscopes</title><link>https://salehahr.github.io/quartz/permanent/30.1.2.1-types-of-endoscopes/</link><pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/permanent/30.1.2.1-types-of-endoscopes/</guid><description>Parent: Permanent notes Source: Leiner Digital Endoscope Design Backlinks: Endoscopes Types of endoscopes
Endoscopes can be classified according to their flexibility, thus resulting in &amp;lsquo;rigid&amp;rsquo;, &amp;lsquo;flexible&amp;rsquo; and &amp;lsquo;semi-rigid&amp;rsquo; variants.
Video sensor at distal (&amp;ldquo;away from the surgeon&amp;rdquo;, opposite of proximal) end allows rigid endoscope to be converted to a flexible one solely by mechanical design Note: the term endoscope in hospital environments typically refers to the flexible variant In rigid endoscopes, an array of rod lenses (lenses which are much longer than their diameter) within a metal tube — also known as a telescope — are used to transmit the images from the [distal end to the proximal end](distal end to the proximal end.</description></item><item><title>40.1 IMU measurement model</title><link>https://salehahr.github.io/quartz/studienarbeit/40.1-imu-measurement-model/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/40.1-imu-measurement-model/</guid><description>Parent: [IMU index](imu index.md), probabilistic models-for-imu Backlinks: [IMU motion model](imu motion model.md), imu kinematic model using euler integration An IMU measures, relative to an inertial frame, acceleration and rotation rate.
The measurements are corrupted by bias and noise (often assumed to be white Gaussian noise ). mkok-2017 Additionally, the acceleration measured is affected by gravity. Note the [assumptions in modelling the true angular velocity in IMUs](assumptions in modelling the-true-angular-velocity-in-imus.</description></item><item><title>40.1.1 Assumptions in modelling the true angular velocity in IMUs</title><link>https://salehahr.github.io/quartz/studienarbeit/40.1.1-assumptions-in-modelling-the-true-angular-velocity-in-imus/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/40.1.1-assumptions-in-modelling-the-true-angular-velocity-in-imus/</guid><description>Parent: [IMU index](imu index.md), imu-measurement-model Source: [MKok 2017 Using inertial sensors for position and orientation estimation](mkok 2017 using inertial sensors-for-position-and-orientation-estimation.md)
For angular velocity, the termshould really be with
negligible Earth rotation = 0 stationary navigation frame, = 0</description></item><item><title>50.3 IMU motion model in a Kalman filter</title><link>https://salehahr.github.io/quartz/studienarbeit/50.3-imu-motion-model-in-a-kalman-filter/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.3-imu-motion-model-in-a-kalman-filter/</guid><description>Parent: IMU index Source: Solà 2017 Quaternion kinematics for ESKF Which states do we use for the motion model? [Choice of states for the IMU motion/kinematics model](choice of states-for-the-imu-motion_kinematics-model.md)
How do we model the IMU motion? [Choice of model for the IMU motion model](choice of model-for-the-imu-motion-model.md)
The kinematics (true state) can be partitioned into a nominal part and an error part, s. variables in ESKF using IMUs . The corresponding [nominal state dynamics and error state dynamics](nominal state-dynamics-and-error-state-dynamics.</description></item><item><title>50.3.1 Choice of states for the IMU motion/kinematics model</title><link>https://salehahr.github.io/quartz/studienarbeit/50.3.1-choice-of-states-for-the-imu-motion-kinematics-model/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.3.1-choice-of-states-for-the-imu-motion-kinematics-model/</guid><description>Parent: IMU index See also: [Choice of model for the IMU motion model](choice of model-for-the-imu-motion-model.md)
According to MKok 2017 , we can either
Use the full state vector [+] knowledge about sensor motion is included in model [-] large state vector Or the partial state vector, where the inputs are the inertial measurements from the IMU [+] process noise intuitively represents IMU noise. This is useful when we have no knowledge about the motion model.</description></item><item><title>50.3.2 Choice of model for the KF using IMU readings</title><link>https://salehahr.github.io/quartz/studienarbeit/50.3.2-choice-of-model-for-the-kf-using-imu-readings/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.3.2-choice-of-model-for-the-kf-using-imu-readings/</guid><description>Parent: [IMU index](imu index.md), imu kinematic-equations/motion-model According to MKok 2017 , here are some models that assume either a constant acceleration or a constant angular velocity:
Constant acceleration model Constant angular velocity model (Notation: angular velocity of the body with respect to world (n), expressed in body CS)
If motion is unknown, there is also the option of modelling the states using random walk equations.</description></item><item><title>50.5.1 IMU nominal-state and error-state kinematics</title><link>https://salehahr.github.io/quartz/studienarbeit/50.5.1-imu-nominal-state-and-error-state-kinematics/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.5.1-imu-nominal-state-and-error-state-kinematics/</guid><description>Parents: [IMU index](imu index.md), 50.3 error-state-kalman-filter Note on discretisation Solà 2017 :
Convert the differential equations to difference equations (use integration) Integration methods may vary Closed form solutions Numerical integration Integration is done for: The nominal state The error state (deterministic part): error state dynamics and control The error state (stochastic part): noise and perturbations Nominal state Error state Model without noise and perturbations Continuous Discrete summary:with the jacobians defined in imu eskf-prediction-equations</description></item><item><title>50.5.1.1 States of the ESKF for estimating IMU pose</title><link>https://salehahr.github.io/quartz/studienarbeit/50.5.1.1-states-of-the-eskf-for-estimating-imu-pose/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.5.1.1-states-of-the-eskf-for-estimating-imu-pose/</guid><description>Parent: IMU index Backlinks: Fusing IMU with complementary sensory data Source: Solà 2017 Quaternion kinematics for ESKF Full state Vector with 19 elements The corresponding kinematics equations/motion model is given in IMU kinematic equations/motion model .
Notes:
The angular error in 3D space is given by the notation. In quaternion space, this angle is halved, with  (&amp;lsquo;double cover&amp;rsquo;, s. [Unit quaternions](unit quaternions.md), rotation-error-representation )
The angular error is defined locally w.</description></item><item><title>50.5.1.2 The initial gravity vector/orientation for the IMU ESKF</title><link>https://salehahr.github.io/quartz/studienarbeit/50.5.1.2-the-initial-gravity-vector-orientation-for-the-imu-eskf/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.5.1.2-the-initial-gravity-vector-orientation-for-the-imu-eskf/</guid><description>Parent: [IMU index](imu index.md), [choice of model for the imu motion model](choice of model-for-the-imu-motion-model.md)
Notes on the initial gravity vector/orientation for the IMU ESKF Solà 2017 For simplicity, it is assumed that  The gravity vector g is estimated in terms of frame q0
This puts the initial uncertainty on the gravity direction, rather than on the initial orientation.
Doing this improves linearity, because now the equation is linear in g and the initiial rotation R0 has no uncertainty</description></item><item><title>50.6 ESKF prediction equations</title><link>https://salehahr.github.io/quartz/studienarbeit/50.6-eskf-prediction-equations/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.6-eskf-prediction-equations/</guid><description>Parents: [IMU index](imu index.md), 50.3 error-state-kalman-filter Source: Solà 2017 Quaternion kinematics for ESKF Error state system equation becomes: where (s. IMU nominal-state and error-state kinematics for an overview of the nonlinear kinematics equations)
State propagation (without considering noise) — produces a state estimate (a priori) Note: this always returns zero as the mean of the error initialises to zero!
Covariance propagation (considers noise); a priori estimate with the Jacobians (transition matrix approximated using first order Euler, more precise methods are available)</description></item><item><title>50.7 ESKF update / Fusing IMU with complementary sensory data</title><link>https://salehahr.github.io/quartz/studienarbeit/50.7-eskf-update-fusing-imu-with-complementary-sensory-data/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.7-eskf-update-fusing-imu-with-complementary-sensory-data/</guid><description>Parent: [IMU index](imu index.md), 50.3 error-state-kalman-filter Source: Solà 2017 Quaternion kinematics for ESKF In the ESKF, the arrival of non-IMU sensor data triggers a correction stage. This correction makes the IMU biases observable , allows correct estimation of the biases The correction stage is three-fold:
observe the error state by way of filter correction &amp;lsquo;add&amp;rsquo; the observed errors to the nominal state to get the supposed &amp;lsquo;true&amp;rsquo; state according to the composition rules in variables in ESKF using IMUs reset the error state Source: Markley 2014 What if several measurements come in without IMU / propagation in between (i.</description></item><item><title>50.7.1 Observation of the error state (filter correction)</title><link>https://salehahr.github.io/quartz/studienarbeit/50.7.1-observation-of-the-error-state-filter-correction/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.7.1-observation-of-the-error-state-filter-correction/</guid><description>Parents: [50.3 Error-State Kalman Filter](50.3 error-state kalman filter.md), [50.5 eskf update / fusing imu with complementary sensory data](50.5 eskf update _ fusing-imu-with-complementary-sensory-data.md) Source: Solà 2017 Quaternion kinematics for ESKF Given is a non-IMU sensor with the measurement function [ Solà , markley ] where x_t is the true state and v is a white Gaussian noise Source: Markley If the measurements are given in quaternion form:
we can directly calculate the orientation error between measured orientation and estimated orientation this becomes our &amp;lsquo;measured&amp;rsquo; angular error which can be used to calculate the residual term [JPL convention] q_meas x (q_est).</description></item><item><title>50.7.1.1 H Jacobian matrix in the ESKF filter correction</title><link>https://salehahr.github.io/quartz/studienarbeit/50.7.1.1-h-jacobian-matrix-in-the-eskf-filter-correction/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.7.1.1-h-jacobian-matrix-in-the-eskf-filter-correction/</guid><description>Parent: Filter correction , eskf-update Source: Solà 2017 Quaternion kinematics for ESKF Evaluation of the H Jacobian
In the prediction stage, the filter estimates the error state. Therefore, the Jacobian H needs to be defined w.r.t. the error state , and evaluated at the true state estimate  However, as the error state mean is zero (not yet observed), the true state is approximated to the nominal state  Thus we can use the nominal state as the evaluation point The first Jacobian Depends on the sensor&amp;rsquo;s particular measurement function The second Jacobian with Source: Markley 2014 Measurement sensitivity matrix (Jacobian w.</description></item><item><title>50.7.3 ESKF reset</title><link>https://salehahr.github.io/quartz/studienarbeit/50.7.3-eskf-reset/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.7.3-eskf-reset/</guid><description>Parent: Fusing IMU with complementary sensory data Backlinks: 50.3 Error-State Kalman Filter Source: Markley moves the rotation error to the global rotation this keeps the rotation error small and far from any singularities To update the global state, the reset has to obey The reset has to preserve the quaternion norm, therefore an exact unit norm expression must be used, instead of an approximation. Using the Rodrigues parameter , the reset becomes which leads to a two step update (1.</description></item><item><title>Monocular depth perception</title><link>https://salehahr.github.io/quartz/permanent/10-monocular-depth-perception/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/permanent/10-monocular-depth-perception/</guid><description>Parent: Permanent notes , SLAM Index Backlinks: Thesis Depth perception in real life
In nature, prey animals typically have eyes on either side of their head to maximise field of view, while most predators have forward-facing eyes with overlapping fields of vision (binocular vision) for maximum depth perception. Humans also have binocular vision. (Some exceptions: fruit bats, killer whales)
We perceive depth, or distance to the objects that we see, based on several visual cues.</description></item><item><title>50.5 Error-State Kalman Filter</title><link>https://salehahr.github.io/quartz/studienarbeit/50.5-error-state-kalman-filter/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.5-error-state-kalman-filter/</guid><description>Source: Markley An EKF propagates the expectation and covariance of the state The MEKF propagates the expectation and the covariance of the error state Source: Whampsey MEKF Previously: orientation is represented by one state Now: orientation is split up into  a large signal q_nom (nominal orientation) and a small signal (perturbation angle alpha) &amp;ndash; parametrises an error quaternion  This reformulates the error in terms of the group operation and so maintains the rotation invariance (rotation preserves the origin, length, angle between two vectors, orientation, etc.</description></item><item><title>50.2.30 Multivariate Kalman filter algorithm</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.30-multivariate-kalman-filter-algorithm/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.30-multivariate-kalman-filter-algorithm/</guid><description>Parent: Multivariate Kalman filters Source: rlabbe Kalman/Bayesian filters in Python Initialisation
Initialise filter state Initialise belief in the state Predict
Propagate state to the next time step using the system model [prediction] Adjust belief to take into account the prediction uncertainty [prior] Update
Obtain measurement and associated belief about its accuracy Calculate residual (prior - measurement) Calculate scaling factor/Kalman gain Set estimated state to be on the residual line based on the scaling factor Update the belief in the state based on measurement certainty Designing the measurement function</description></item><item><title>50.2. Bayes' Theorem</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.-bayes-theorem/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.-bayes-theorem/</guid><description>Parent: Bayesian Filter Update Step Source: rlabbe Kalman/Bayesian filters in Python How do we compute the probability of an event given previous information? (s. also Frequentist vs Bayesian statistics )
Formula to compute new information into existing information
Used in the update step of a Bayesian filter (valid for both probabilities as well as probability distributions) where || . || expresses normalisation
B Evidence (sensor measurements z) p(A) Prior p(B|A) Likelihood p(A|B) Posterior In filtering systems, computing p(x|z) is nearly impossible, but computing p(z|x) is fairly straightforward, which then facilitates the computation of p(x|z) via the Bayes' theorem formula.</description></item><item><title>50.2.10 Discrete Bayesian filter</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.10-discrete-bayesian-filter/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.10-discrete-bayesian-filter/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python The Kalman filter is a subset of Bayesian filters
Predict and update steps like in the g-h filter Here: error percentages are used to implicitly compute the g and h parameters Steps
[Initialise our belief in the state] The predict step always degrades our knowledge (belief/prior) However, in the update step , we add another measurement. This, will always improve our knowledge regardless of noise, enabling convergence Limitations of the discrete Bayes filter</description></item><item><title>50.2.10.1 Discrete Bayesian Filter Predict Step</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.10.1-discrete-bayesian-filter-predict-step/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.10.1-discrete-bayesian-filter-predict-step/</guid><description>Parent: Discrete Bayesian filter Source: rlabbe Kalman/Bayesian filters in Python The predict step uses the total probability theorem.
Computes total probability of multiple possible events Uses the system model (propagates the states from prev. time step [posterior] to the next one); prediction Accounts for the uncertainty (kernel) in the prediction: produces a prior Generalise the uncertainty using a kernel (distributes the uncertainty over a range around the prediction) Integrate the kernel into the calculations by using convolution * Convolving the &amp;ldquo;current probabilistic estimate&amp;rdquo; with the &amp;ldquo;probabilistic estimate of how much we think the position has changed&amp;rdquo; (from system model) The prior is a &amp;lsquo;degraded&amp;rsquo; version of the belief i.</description></item><item><title>50.2.10.2 Bayesian Filter Update Step</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.10.2-bayesian-filter-update-step/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.10.2-bayesian-filter-update-step/</guid><description>Parent: Discrete Bayesian filter Source: rlabbe Kalman/Bayesian filters in Python The update step uses Bayes' Theorem Produces the posterior by using the likelihood and the prior Also incorporates sensor data (measurements), as the measurements go into the likelihood calculation Update algorithm
Get a measurement, and associated belief about its accuracy Compute likelihood from the measurement and the measurement accuracy assumption Update the posterior using the likelihood and the prior</description></item><item><title>50.2.20 1D Kalman filters</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.20-1d-kalman-filters/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.20-1d-kalman-filters/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python [Deriving Kalman filter from Discrete Bayes using Gaussians](deriving kalman filter-from-discrete-bayes-using-gaussians.md) 1D Kalman filter algorithm Kalman gain using Gaussians Variance of the 1D Kalman filter Factors affecting Kalman filter performance</description></item><item><title>50.2.20.1 1D Kalman filter algorithm</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.20.1-1d-kalman-filter-algorithm/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.20.1-1d-kalman-filter-algorithm/</guid><description>Parent: 1D Kalman filters Source: rlabbe Kalman/Bayesian filters in Python Initialisation:
Initialise the state of the filter Initialise the belief in the state Predict step:
Gaussian addition prior = predict(x, process_model) Incorporate process variance in order to prevent smug filtering Update step:
Gaussian multiplication likelihood = gaussian(z, sensor_var) x = update(prior, likelihood) The output of both steps is a Gaussian probability distribution N(mean, var)</description></item><item><title>50.1 Why Kalman filters?</title><link>https://salehahr.github.io/quartz/studienarbeit/50.1-why-kalman-filters-/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.1-why-kalman-filters-/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python We work with 2 sources of data:
Sensor measurements Our own predictions (based on knowledge of system behaviour) Sensors are noisy, don&amp;rsquo;t give perfect information
Simple solution: to average readings However, this doesn&amp;rsquo;t work when the sensor is too noisy data collection not possible The prediction, however, is also susceptible to noise (the world is noisy, outside/unaccounted for influences)</description></item><item><title>50.1.1 Aim and main principle of Kalman filters</title><link>https://salehahr.github.io/quartz/studienarbeit/50.1.1-aim-and-main-principle-of-kalman-filters/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.1.1-aim-and-main-principle-of-kalman-filters/</guid><description>Source: rlabbe Kalman/Bayesian filters in Python Aim of the Kalman/Bayesian filters: to accumulate (or to somehow blend)
our noisy and limited knowledge (of system behaviour) noisy and limited sensor readings and with these, make the best possible prediction (estimate) of the system state.
Main principles:
use past information to make predictions for the future never throw away information predict/propagation step: calculate prediction based on process model and using previous state data (previous estimate) update step: calculate the estimates based on prediction and measurement Prediction step a.</description></item><item><title>50.2.1 Process noise Q and W (odometry)</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.1-process-noise-q-and-w-odometry/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.1-process-noise-q-and-w-odometry/</guid><description>Parent: Factors affecting Kalman filter performance Source: Tereshkov 2015 http://www.researchgate.net/publication/271532640_A_Simple_Observer_for_Gyro_and_Accelerometer_Biases_in_Land_Navigation_Systems Process noise covariance matrix has no clear physical meaning, cannot be deduced from sensor characteristics Leads to non-intuitive, iterative procedures to tune KFs Which means that KF optimality is rarely achieved in practice Alternative to KF tuning: the use of geometric observers
estimates are expresssed only in terms of quantities with clear geometrical meaning Source: [Schneider 2013 How to not make the EKF fail](schneider 2013 how to-not-make-the-ekf-fail.</description></item><item><title>50.2.2 Measurement noise R, V (landmark)</title><link>https://salehahr.github.io/quartz/studienarbeit/50.2.2-measurement-noise-r-v-landmark/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/quartz/studienarbeit/50.2.2-measurement-noise-r-v-landmark/</guid><description>Parent: Multivariate Kalman filter algorithm Source: rlabbe Kalman/Bayesian filters in Python R models the noise in the sensors as a covariance matrix dim(R) = m x m (m: number of sensors) Possible complications in multisensor systems, the correlation between the sensors might not be clear sensor noise might not be pure Gaussian Source: http://www.linkedin.com/pulse/tuning-extended-kalman-filter-process-noise-training-alex-thompson Ways to obtain R
Using the variances given in the sensor specifications Comopare the measurements against a strong ground truth and derive the variance variable by variable Record the steady state measurements over a long period of time and measure the variance (look at the histogram) Source: [Schneider 2013 How to not make the EKF fail](schneider 2013 how to-not-make-the-ekf-fail.</description></item></channel></rss>