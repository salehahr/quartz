<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>localisation/landmarks on</title><link>https://salehahr.github.io/tags/localisation/landmarks/</link><description>Recent content in localisation/landmarks on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://salehahr.github.io/tags/localisation/landmarks/index.xml" rel="self" type="application/rss+xml"/><item><title>Distance between landmarks</title><link>https://salehahr.github.io/studienarbeit/distance-between-landmarks/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/distance-between-landmarks/</guid><description>Source: SLAM for Dummies Backlinks: Nearest Neighbour Methods:
Euclidean distance (suitable for far distances) Mahalanobis distance (better, but more complex)</description></item><item><title>Landmark extraction</title><link>https://salehahr.github.io/studienarbeit/landmark-extraction/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/landmark-extraction/</guid><description>Source: SLAM for Dummies Backlinks: Basic EKF for SLAM , nearest-neighbour Basic landmark extraction using a laser scanner
Spike algorithm RANSAC ( ekf handles points) Expansion of RANSAC so that EKF handles lines Scan-matching: two successive laser scans are matched Spike and RANSAC are good for indoor environments</description></item><item><title>Step 3 New landmarks</title><link>https://salehahr.github.io/studienarbeit/step-3-new-landmarks/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/step-3-new-landmarks/</guid><description>Source: SLAM for Dummies Backlinks: Basic EKF for SLAM Overview
Landmarks that are new are not dealt with until step 3. Delaying the incorporation of new landmarks until the will decrease the computation cost needed for this step the covariance matrix, P, and the system state, X, are smaller by then. Update state vector x and covariance matrix P with new landmarks Add new landmark to state vector X Add new row and column to covariance matrix Covariance for new landmark Robot-landmark covariance</description></item><item><title>Landmarks</title><link>https://salehahr.github.io/studienarbeit/landmarks/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/landmarks/</guid><description>Source: [SLAM for Dummies](SLAM for Dummies.md) Parent: [SLAM Index](SLAM Index.md)
Features which can easily be re-observed and distinguished from the environment
Characteristics:
Re-observable from different positions and angles Unique (i.e. no mix-up with other landmarks) Plentiful &amp;ndash; should not be so few that robot gets lost (robot spends extended time w/o enough visible landmarks) Stationary Basic landmark extraction</description></item><item><title>RANSAC</title><link>https://salehahr.github.io/studienarbeit/ransac/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/ransac/</guid><description>Source: [SLAM for Dummies](SLAM for Dummies.md) Parent: [Landmark extraction](Landmark extraction.md)
Random Sampling Consensus
to extract lines from a laser scan lines then used as landmarks indoors: straight lines from walls line landmarks are found by randomly taking a sample of laser readings (e.g. sample readings from 12deg to 22deg from within a range of 0 to 180deg) least squares approximation for line of best fit RANSAC then checks how many laser readings lie close to the best fit line initially, all readings are assumed to be unassociated to any lines if the num.</description></item><item><title>Spike landmarks</title><link>https://salehahr.github.io/studienarbeit/spike-landmarks/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/studienarbeit/spike-landmarks/</guid><description>Source: SLAM for Dummies Backlinks: Landmark extraction Uses extrema to find landmarks Find values in the range of a laser scan, where two values differ by more than a certain amount (e.g. 0.5 m) This finds big changes in the laser scan Alternatively, using three values next to each other: A, B, C (A - B) + (C - B) yields a value Better for finding spikes as it finds actual spikes Rely on the landscape changing a lot between two laser beams Algo will fail in smooth environments Suitable for indoor environments, however is not robust against envs w/ people people are picked up as spikes as theoretically they are good landmarks (just not stationary!</description></item></channel></rss>