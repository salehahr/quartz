<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>localisation/data-association on</title><link>https://salehahr.github.io/zettelkasten/tags/localisation/data-association/</link><description>Recent content in localisation/data-association on</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><atom:link href="https://salehahr.github.io/zettelkasten/tags/localisation/data-association/index.xml" rel="self" type="application/rss+xml"/><item><title>Data association in DefSLAM</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/data-association-in-defslam/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/data-association-in-defslam/</guid><description>Source: Lamarca 2019 DefSLAM See also: Data association Goal: match keypoints in current frame (newly extracted) with map points (already in map/system) Use the active matching strategy proposed in [Agudo 2015]: “Simultaneous pose and non-rigid shape with particle dynamics,” Steps  ORB points (keypoints) are detected in current frame
Camera pose Tcw is predicted
using camera motion model camera motion model: function of past camera poses Predict where map points (existing in map) would be imaged, based on last estimated template i.</description></item><item><title>Nearest Neighbour</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/nearest-neighbour/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/nearest-neighbour/</guid><description>Source: SLAM for Dummies Backlinks: Data association Nearest neighbour approach
Get a new laser scan &amp;ndash;&amp;gt; ( landmark extraction ) extract all visible landmarks Associate each extracted LM to the closest LM we have seen more than N times Pass each pairs of association (extracted LM, LM in database) through a validation gate If pair passes &amp;ndash;&amp;gt; n = n + 1 (num. times seen) If pair fails &amp;ndash;&amp;gt; add new LM to database, with n := 1</description></item><item><title>Validation gate</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/validation-gate/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/validation-gate/</guid><description>Source: SLAM for Dummies Backlinks: Nearest Neighbour An observed landmark is associated to a landmark if the following holds v innovation S innovation covariance The Validation gate makes use of the fact that the EKF implementation gives a bound on the uncertainty of an observation of a LM
Is an observed LM a LM in the database?</description></item><item><title>Data association</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/data-association/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/data-association/</guid><description>Parents: SLAM Index , basic-ekf-for-slam Source: SLAM for Dummies Backlinks: [What is SLAM?](what is slam_.md), [data association in defslam](data association in defslam.md), visual slam-implementation-framework Matching observed landmarks from different scans (different time steps) with each other. Also called &amp;rsquo;re-observing' landmarks.
Problems that can arise:
The landmark(s) might not be observed every time step (bad landmark) Something might be observed as a landmark, but it never appears again (bad landmark) Wrong association of a landmark to a previously seen landmark Goal: define a suitable data-association policy to minimise the first two problems Given: database that stores previously seen landmarks (initially empty) As a rule: a landmark is only considered worthwhile to be used in SLAM once it is seen N times</description></item></channel></rss>