<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>-sounding-board on Zettelkasten</title><link>https://salehahr.github.io/zettelkasten/tags/sounding-board/</link><description>Recent content in -sounding-board on Zettelkasten</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 26 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://salehahr.github.io/zettelkasten/tags/sounding-board/index.xml" rel="self" type="application/rss+xml"/><item><title>scipy.optimize</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/scipy.optimize/</link><pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/scipy.optimize/</guid><description>http://stackoverflow.com/questions/52438263/scipy-optimize-gets-trapped-in-local-minima-what-can-i-do
Local optims sensitive to initial value. Workarounds:
use your optimization in a loop with random starting points inside your boundaries
use an algorithm that can break free of local minima, I can recommend scipy&amp;rsquo;s basinhopping() It repeats your minimize procedure multiple times and get multiple local minimums. The minimal one is the global minimum.
use a global optimization algorithm and use it&amp;rsquo;s result as initial value for a local algorithm.</description></item><item><title>Symbolic container for Probe</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/symbolic-container-for-probe/</link><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/symbolic-container-for-probe/</guid><description/></item><item><title>KF kinematics</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/kf-kinematics/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/kf-kinematics/</guid><description>Overview of KF states (true, nominal, error) Nominal state kinematics Error state kinematics Old stuff:</description></item><item><title>Program outline</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/program-outline/</link><pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/program-outline/</guid><description>Current assumptions (to take care of later!)
Probe is rigid — DOFs are either 0 or constant — switch to rotating scope later No gravity No bias/offset, no noise in IMU Note: Stuff marked with checkboxes are either to-dos or things I&amp;rsquo;m not sure that I implemented correctly
http://github.com/feudalism/dvi-ekf/tree/eskf; projects generate_data.py Data generation (is called from main.py)
Main objects
Generate camera data (from DefSLAM mono trajectory) Make RigidSimpleProbe (for now, all DOFs are 0 or constant) Make IMU object, generate first (om, acc) values from interpolated camera data ( - should generate it from stereo data instead) Variables</description></item><item><title>Thesis restructure</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/thesis-restructure/</link><pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/thesis-restructure/</guid><description>Parent: Thesis Backlinks: Next update 2021-06 Introduction
General Bladder cancer surgery — cryosection The navigation/localisation problem GRK Problem statement Questions arising from the localisation task:
Which localisation algorithm do we use? We have settled on the camera-IMU combination. How do we take into account the non-constant calibration parameters between the camera and IMU (due to the surgeon&amp;rsquo;s manipulation of the cystoscope)? Also, modularity of setup: the calibration estimation allows the IMU-camera combination to be applied to different devices  Corresponding contributions Literature research deformable VI localisation Modelling the kinematic relations between the IMU and camera on the cystoscope Estimation of IMU calibration parameters for VI localisation on cystoscope Literature review (I)</description></item><item><title>50.7.1 Observation of the error state (filter correction)</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/50.7.1-observation-of-the-error-state-filter-correction/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/50.7.1-observation-of-the-error-state-filter-correction/</guid><description>Parents: [50.3 Error-State Kalman Filter](50.3 error-state kalman filter.md), [50.5 eskf update / fusing imu with complementary sensory data](50.5 eskf update _ fusing-imu-with-complementary-sensory-data.md) Source: Solà 2017 Quaternion kinematics for ESKF Given is a non-IMU sensor with the measurement function [ Solà , markley ] where x_t is the true state and v is a white Gaussian noise Source: Markley If the measurements are given in quaternion form:
we can directly calculate the orientation error between measured orientation and estimated orientation this becomes our &amp;lsquo;measured&amp;rsquo; angular error which can be used to calculate the residual term [JPL convention] q_meas x (q_est).</description></item><item><title>50.7.1.1 H Jacobian matrix in the ESKF filter correction</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/50.7.1.1-h-jacobian-matrix-in-the-eskf-filter-correction/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/50.7.1.1-h-jacobian-matrix-in-the-eskf-filter-correction/</guid><description>Parent: Filter correction , eskf-update Source: Solà 2017 Quaternion kinematics for ESKF Evaluation of the H Jacobian
In the prediction stage, the filter estimates the error state. Therefore, the Jacobian H needs to be defined w.r.t. the error state , and evaluated at the true state estimate  However, as the error state mean is zero (not yet observed), the true state is approximated to the nominal state  Thus we can use the nominal state as the evaluation point The first Jacobian Depends on the sensor&amp;rsquo;s particular measurement function The second Jacobian with Source: Markley 2014 Measurement sensitivity matrix (Jacobian w.</description></item><item><title>50.7.3 ESKF reset</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/50.7.3-eskf-reset/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/50.7.3-eskf-reset/</guid><description>Parent: Fusing IMU with complementary sensory data Backlinks: 50.3 Error-State Kalman Filter Source: Markley moves the rotation error to the global rotation this keeps the rotation error small and far from any singularities To update the global state, the reset has to obey The reset has to preserve the quaternion norm, therefore an exact unit norm expression must be used, instead of an approximation. Using the Rodrigues parameter , the reset becomes which leads to a two step update (1.</description></item><item><title>Thesis</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/thesis/</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/thesis/</guid><description>Parent: Scope of Studienarbeit See also: Schönheitsfehler , Tex stuff , Spelling , Notes on current thesis version , Fact checks **TO BE RESTRUCTURED** s. Thesis restructure Introduction
Bereits am Anfang (S.1) auf die Navigation eingehen GRK 2543 more on the navigation subtheme (loc. of other tools within camera view of the main probe &amp;ndash; relate to generalisability of optim.-based methods later on) Problem statement Literature review/Stand der Technik/Other works Visual tracking review: types of algos available VI-Review filt-based, opt-based  DefSLAM use of ORB features in def.</description></item><item><title>SA TODO</title><link>https://salehahr.github.io/zettelkasten/studienarbeit/sa-todo/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/studienarbeit/sa-todo/</guid><description>Parent: Scope of Studienarbeit See also: [HiWi to-do](hiwi to-do.md), defslam +-orbslam3-integration Studienarbeit Camera-based localisation
Find a classification of approaches/techniques Briefly describe each See if it applies to the project Look into the most promising approach &amp;ndash; how to implement (DefSLAM) DefSLAM Install DefSLAM library Skim through an existing VI-SLAM (rigid) implementation to see how sensor fusion is done (as an overview for the coming sensor fusion task) VINS-Mono, VIORB paper Prepare dummy data for testing VI-SLAM (eventually VI-DefSLAM) — interpolate data between frames and add noise/bias Go through code Get the executables working VideoCapture OpenCV problem &amp;ndash; reinstall with all FFMMPEG options Figure out g2o Go through the rest of DefSLAM Go through the rest of ORBSLAM3 IMU term in cost function IMU preintegration IMU initialisation implement imu term in optimisation (either using ekf (s.</description></item></channel></rss>