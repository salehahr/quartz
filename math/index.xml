<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maths on Zettelkasten</title><link>https://salehahr.github.io/zettelkasten/math/</link><description>Recent content in Maths on Zettelkasten</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Sat, 14 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://salehahr.github.io/zettelkasten/math/index.xml" rel="self" type="application/rss+xml"/><item><title>motions-in-plane</title><link>https://salehahr.github.io/zettelkasten/math/motions-in-plane/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/motions-in-plane/</guid><description>Motions in the plane Source: bonn-3D-cs Rotation of $\mathcal{X}$ to $\mathcal{X}^\prime$
$$ \begin{align} \left[ \begin{array} ~x \ y \end{array} \right] &amp;amp;= \left[ \begin{array} ~r\cos \alpha \ y\cos \alpha \end{array} \right]\
\mathcal{X}^\prime = \mathcal{R}(\mathcal{X}) : ~ \left[ \begin{array} ~x^\prime \ y^\prime \end{array} \right] &amp;amp;= \left[ \begin{array} ~\cos\gamma &amp;amp; -\sin\gamma \
\sin\gamma &amp;amp; \cos\gamma \end{array} \right] \left[ \begin{array} ~x \ y \end{array} \right] \end{align} $$ Basic homogeneous transformations Translation of $\mathbf{t}$ $$ \begin{align} \mathbf{x}^\prime &amp;amp;= \mathbf{T} \mathbf{x} \</description></item><item><title>bayes-rule</title><link>https://salehahr.github.io/zettelkasten/math/statistics/bayes-rule/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/bayes-rule/</guid><description>Parent: probability-theory Bayes rule Source: blitzstein-hwang $$P(A|B) = \dfrac{P(B|A) P(A)}{P(B)}$$
Extra conditioning &amp;ldquo;Everything is conditioned on $C$.&amp;rdquo;
$$P(A|B, C) = \dfrac{P(B|A, C) P(A|C)}{P(B | C)}$$ given $P(A\cap E) &amp;gt; 0$ and $P(B\cap E) &amp;gt; 0$.
Alternative approaches for interpretation
$B, ~C$ as a single event $B\cap C$
$$P(A|B,C) = \dfrac{P(A, B, C)}{P(B, C)}$$ Swap roles of $B$ and $C$ $$P(A|B, C) = \dfrac{P(C|A, B) P(A|B)}{P(C | B)}$$</description></item><item><title>conditional-probability</title><link>https://salehahr.github.io/zettelkasten/math/statistics/conditional-probability/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/conditional-probability/</guid><description>Parent: probability-theory Conditional probability Source: blitzstein-hwang $$P(A|B) = \dfrac{P(A~\cap~B)}{P(B)}$$
Notation Description $P(A)$ prior held belief $B$ evidence that is observed $P(A\lvert B)$ posterior (updated belief) Properties $0 \leq P(A|B) \leq 1$ $P(\Omega|E) = 1$, $P(\emptyset | E) = 0$ For disjoint events $A_i$, $P(\bigcup_i A_i | E) = \sum_i P(A_i|E)$ Complement: $P(A^c | E) = 1 - P(A|E)$ Union: $P(A\cup B|E) = P(A|E) + P(B|E) - P(A\cap B|E)$</description></item><item><title>naive-probability</title><link>https://salehahr.github.io/zettelkasten/math/statistics/naive-probability/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/naive-probability/</guid><description>Naive probability Source: blitzstein-hwang Let event $A \subseteq \Omega$ $$ P_\text{naive}(A) = \dfrac{|A|}{|\Omega|} $$ where $|A|$ is the number of elements ( outcomes in $A$).
Required assumptions The sample space $\Omega$ is finite. The outcomes $\omega \in \Omega$ have equal probability of happening each. Usage Problems with equally likely outcomes. Problems with symmetry $\rightarrow$ equally likely probabilities for all outcomes
e.g. flipping a fair coin As a null model (as a hypothesis)</description></item><item><title>probability-function</title><link>https://salehahr.github.io/zettelkasten/math/statistics/probability-function/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/probability-function/</guid><description>Parent: probability-theory Probability function Source: blitzstein-hwang Maps an event $E$ to probability values.
The probability function $P$ must satisfy the axioms:
$P(\emptyset)=0$, $P(\Omega)=1$ $P\left(, \bigcup_i A_i ,\right) = \sum_i P(A_i)$ if the events $A_i$ are mutually exclusive. Properties $P(A^c) = 1 - P(A)$ If $A \subseteq B$, then $P(A) \leq P(B)$ $P(A~\cup~B) = P(A) + P(B) - P(A~\cap~B)$</description></item><item><title>Probability mass function</title><link>https://salehahr.github.io/zettelkasten/math/statistics/probability-mass-function/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/probability-mass-function/</guid><description>Backlinks: Experiments in probability theory Probability mass function Source: Wiki Each outcome $\omega$ in the sample space $\Omega$ is assigned a probability value via the probability mass function $p(\omega)$ with the properties $$ \begin{align} p(\omega) &amp;amp;\in \left[ 0, 1\right] \quad \forall, \omega \in \Omega\
\sum_{\omega \in \Omega} p(\omega) &amp;amp;= 1 \end{align} $$
Source: Yang
$X$ is distributed according to the distribution $P$, $$X \sim P(x) ~.$$
For a specific instance of $X$ (or outcome), evaluating the pmf gives the probability $$P(X = x_i) = P(x_i) = p_i \geq 0$$</description></item><item><title>probability-theory</title><link>https://salehahr.github.io/zettelkasten/math/statistics/probability-theory/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/probability-theory/</guid><description>Terminology/Definitions Probability experiment Outcome Sample space Event Probability function Naive probability Frequentist vs. Bayesian probablity interpretation Conditional probability Bayes' rule Random variable Expectation $\mathbb{E}$ Conditional independence Distributions Probability distribution Probability mass function Gaussian distribution Literature Blitzstein, Hwang</description></item><item><title>Identity of a group</title><link>https://salehahr.github.io/zettelkasten/math/rotations/identity-of-a-group/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/identity-of-a-group/</guid><description>Source: https://vladimirbozovic.net/univerzitet/wp-content/uploads/2010/11/group-theory-chapter.pdf
In every group, there is an element $E$, such that $$EA = AE = A$$ for every member $A$ of the group.</description></item><item><title>Quaternion double cover</title><link>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-double-cover/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-double-cover/</guid><description>Parent: Quaternion index Source: Solà 2017 $$ \mathbf{q} = \left[ \begin{array}{c} q_w\ \mathbf{q}_v \end{array} \right] = \left[ \begin{array}{c} \cos\frac{\phi}{2} \ \mathbf{u} \sin\frac{\phi}{2} \end{array} \right] $$ where $\phi$ is the angle rotated by $\mathbf{q}$ on objects in the 3D space $\mathbb{R}^3$.
Recap $\theta$ is the angle in quaternion space (s. unit quaternions ) $\phi$ as the angle in 3D space $\mathbb{R}^3$ Therefore, the angle is halved in quaternion space. $$\theta = \phi / 2$$</description></item><item><title>Euler axis/angle representation</title><link>https://salehahr.github.io/zettelkasten/math/rotations/euler-axis-angle-representation/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/euler-axis-angle-representation/</guid><description>Parents: rotations-so3-group-index , orientation-parametrisations See also: Rotation vector representation Source: Markley 2014 3 parameters:
there appears to be 4 parameters: 1 angle, 3-component unit vector (Euler axis, Euler angle of the rotation) however, the vector $\mathbf{e}$ is a unit vector (constrained by $\left\lVert \mathbf{e} \right\rVert = 1$ To rotation matrix The matrix is periodic (period 2*pi) From rotation matrix If -1 &amp;lt; cos theta &amp;lt; 1: If cos theta = 1: axis undefined</description></item><item><title>Gibbs / Rodrigues parameter representation for rotations</title><link>https://salehahr.github.io/zettelkasten/math/rotations/gibbs-rodrigues-parameter/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/gibbs-rodrigues-parameter/</guid><description>Parent: Orientation parametrisations See also: Rotation error representation Source: Markley 2014 From unit quaternions : From euler-axis-angle-representation : To unit quaternions :   Plane of the figure contains identity quaternion , origin The circle is a cross section of the quaternion sphere S^3 The upper horizontal axis is the 3D Gibbs vector hyperplane (tangent at the identity quaternion) [+] q and -q map to the same Gibbs vector, therefore there is a 1:1 mapping of rotations between quaternions and the Gibbs parameter [-] the Gibbs vector is infinite for 180 degree rotations (q.</description></item><item><title>Intrinsic vs extrinsic rotations</title><link>https://salehahr.github.io/zettelkasten/math/rotations/intrinsic-vs-extrinsic-rotations/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/intrinsic-vs-extrinsic-rotations/</guid><description>Parent: Rotations/SO(3) Group Index See also: Active/passive or Alibi/alias rotation transformations Source: http://rock-learning.github.io/pytransform3d/transformation_ambiguities.html We want to rotate first by $R_1$, then by $R_2$.
Extrinsic (global) rotation In global coordinates, extrinsic rotation: $R_2 \cdot R_1$
Intrinsic (local) rotation In local coordinates, intrinsic rotation: $R_1 \cdot R_2$
($R_1$ defines new coordinates in which $R_2$ is applied)
Specifying the convention is relevant when dealing with Euler angles!!!
Illustration Source: bonn-3D-cs Active translation &amp;ndash;&amp;gt; rotation</description></item><item><title>Quaternion to rotation matrix</title><link>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-to-rotation-matrix/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-to-rotation-matrix/</guid><description>Parents: quaternion-index , rotations-so3-group-index See also: orientation-parametrisations Source: Markley 2014 Unit quaternion to rotation matrix</description></item><item><title>Rotation error representation</title><link>https://salehahr.github.io/zettelkasten/math/rotations/rotation-error-representation/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/rotation-error-representation/</guid><description>Parents: rotations-so3-group-index , quaternion-index See also: Orientation parametrisations , which orientation parametrisation to-choose? Source: Markley 2014 Note:
Only for small angle approximations! all these representations are equivalent through second order as In terms of&amp;hellip;
Rotation vector Quaternions Euler angles Use upper sign if {i,j,k} even permutation of {1,2,3}, lower sign otherwise
gibbs-rodrigues-parameter . MRPs. etc.</description></item><item><title>Rotations / SO(3) group index</title><link>https://salehahr.github.io/zettelkasten/math/rotations/rotations-so3-group-index/</link><pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/rotations-so3-group-index/</guid><description>Group theory SE(3) Special Euclidian Group SO(3) 3D rotation group Lie group, Lie algebra Exponential map Logarithm map Ambiguities in rotation representations Active/passive or Alibi/alias rotation transformations Intrinsic vs extrinsic rotations Summary
  Extrinsic/Global Intrinsic/Local Active $\mathbf{x}_2 = T_2 T_1 \mathbf{x}_0$ $\mathbf{x}_2 = T_1 T_2 \mathbf{x}_0$ Passive $\mathbf{x}^{\prime\prime} = T_1^{-1}, T_2^{-1} \mathbf{x}$ $\mathbf{x}^{\prime\prime} = T_2^{-1}, T_1^{-1} \mathbf{x}$ Active $\longleftrightarrow$ passive: invert transformation Global $\longleftrightarrow$ local: reverse transformation order Rotation representations Orientation parametrisations Rotation error representation Which orientation parametrisation to choose?</description></item><item><title>Active/passive or Alibi/alias transformations</title><link>https://salehahr.github.io/zettelkasten/math/rotations/active-passive-or-alibi-alias-transformations/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/active-passive-or-alibi-alias-transformations/</guid><description>Parent: Rotations / SO(3) group index See also: Intrinsic vs extrinsic rotations Sources: Wiki , bonn-3D-cs Alibi / Active Alias / Passive Point $\mathcal{x}$ doesn&amp;rsquo;t change, but the coord vector representation changes to the &amp;lsquo;prime&amp;rsquo; system CS $S(x,, y)$ is fixed CS $S(x,, y)$ is rotated Point $\mathcal{x}$ rotates within fixed CS Point $\mathcal{x}$ remains stationary but is represented within a new CS $\mathcal{x}_1 \rightarrow \mathcal{x}_2$ $S_1(x^\prime,y^\prime) \rightarrow S_2(x^{\prime\prime}, y^{\prime\prime})$ $\left( \begin{array}\cos\theta &amp;amp; -\sin\theta &amp;amp; 0\ \sin\theta &amp;amp; \cos\theta &amp;amp; 0\0 &amp;amp; 0 &amp;amp; 1\end{array} \right)$Counterclockwise rotation by theta $\left( \begin{array}\cos\theta &amp;amp; \sin\theta &amp;amp; 0\ -\sin\theta &amp;amp; \cos\theta &amp;amp; 0\0 &amp;amp; 0 &amp;amp; 1\end{array} \right)$ mathematics physics, robotics Source: http://rock-learning.</description></item><item><title>Which orientation parametrisation to choose?</title><link>https://salehahr.github.io/zettelkasten/math/rotations/20.4-which-orientation-parametrisation/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/20.4-which-orientation-parametrisation/</guid><description>Source: MKok 2017 Estimation algorithms (filtering, smoothing) usually assume that the unknown states and parameters are represented in Euclidean space
Due to wrapping and gimbal lock, Euclidian addition and subtraction don&amp;rsquo;t work Also generally don&amp;rsquo;t work for rotation matrices and unit quaternions Constraints (unit quaternion norm, rotation matrix orthogonality) are usually hard to implement in estimation algorithms These concerns led to the development of the MEKF .
To deal with this: Linearisation of an orientation in SO(3) Alternative method to estimate orientation:</description></item><item><title>Exponential map</title><link>https://salehahr.github.io/zettelkasten/math/rotations/exponential-map/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/exponential-map/</guid><description>Parents: Quaternion index , Rotations / SO(3) group index Notation Variables $$\begin{alignedat}{3} &amp;amp;\phi &amp;amp;&amp;amp;\in \mathbb{R}^3\
&amp;amp;\phi^\wedge &amp;amp;&amp;amp;\in \mathfrak{so}(3)\
&amp;amp;\mathbf{R} &amp;amp;&amp;amp;\in \text{SO}(3)\
\end{alignedat}$$
Functions $$\begin{alignedat}{3} \text{(skew) } \wedge &amp;amp;:&amp;amp; \mathbb{R}^3 &amp;amp;&amp;amp;\rightarrow \mathfrak{so}(3) &amp;amp;\
\exp &amp;amp;:&amp;amp; ~&amp;amp;&amp;amp;\mathfrak{so}(3) &amp;amp;\rightarrow \text{SO}(3)\
\text{Exp} &amp;amp;:&amp;amp; ~\mathbb{R}^3 &amp;amp;&amp;amp; &amp;amp;\rightarrow \text{SO}(3) \end{alignedat}$$
Thus, $$\begin{alignedat}{3} &amp;amp;\exp(\phi^\wedge) = \text{Exp}(\phi) = \mathbf{R} \end{alignedat}$$
Source: Forster 2017 IMU Preintegration At the identity Maps an element of the Lie algebra ($\phi^\wedge \in \mathfrak{so}(3)$, a skew symmetric matrix) to a rotation First order approximation $$ \exp(\phi^\wedge) \approx \mathbf{I} + \phi^\wedge$$</description></item><item><title>Lie group, Lie algebra</title><link>https://salehahr.github.io/zettelkasten/math/rotations/lie-group-lie-algebra/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/lie-group-lie-algebra/</guid><description>Lie group Parent: Rotations / SO(3) group index Source: http://www.seas.upenn.edu/~meam620/slides/kinematicsI.pdf
A group that is a differentiable (smooth) manifold is called a Lie group.
Lie algebra Source: http://en.wikipedia.org/wiki/3D_rotation_group Lie algebra $\mathfrak{so}(3)$
Every Lie group has an associated Lie algebra Lie algebra: linear space with same dimension as the Lie group Consists of all skew-symmetric 3x3 matrices Elements of the Lie algebra $\mathfrak{so}(3)$ are elements of the tangent space of the manifold SO(3)/Lie group at the identity element .</description></item><item><title>Logarithm map</title><link>https://salehahr.github.io/zettelkasten/math/rotations/logarithm-map/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/logarithm-map/</guid><description>Parents: Quaternion index , rotations / so(3) group-index Backlinks: Linearisation of an orientation in SO(3) Source: Forster 2017 IMU Preintegration Maps a rotation matrix $R$ in SO(3) to a skew-symmetric matrix ( Lie algebra ) Perturbations, first order approximation S. Forster [2015] suppplementary material for the inverse Jacobian
Source: MKok 2017 Approximations for small perturbations</description></item><item><title>Rotations as xyz Bryan-Tait angles (Kardanwinkel)</title><link>https://salehahr.github.io/zettelkasten/math/rotations/bryan-tait-kardanwinkel/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/bryan-tait-kardanwinkel/</guid><description>Parent: rotations-so3-group-index Source: Woernle Rotation angle nomenclature Euler angles: ZXZ (mitgedrehte Achsen) Kardan-Winkel [de] / Bryan-Tait angles: ZYX (mitgedrehte Achsen) xyz-Kardan-Winkel K3: körperfestes KS K0: Welt-KS
Ausgangslage 1. Drehung um x0 2. Drehung um y1 3. Drehung um z2 Winkelgeschwindigkeit
(either depicted in CS0, or CS3)</description></item><item><title>Identity quaternion</title><link>https://salehahr.github.io/zettelkasten/math/rotations/identity-quaternion/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/identity-quaternion/</guid><description>Parent: Quaternion index Source: Solà 2017 $$\mathbf{q}_I = 1 = \left[ \begin{array}{c} 1\ \mathbf{0}_3 \end{array} \right]$$
$$\mathbf{q}_I \otimes \mathbf{q} = \mathbf{q} \otimes \mathbf{q}_I = \mathbf{q}$$</description></item><item><title>Quaternion index</title><link>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-index/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-index/</guid><description>Notation Quaternion conventions Basic math/properties Quaternion multiplication Identity quaternion Quaternion conjugate Quaternion norm Inverse quaternion Unit quaternions Double cover Calculus Quaternion differentiation As rotation rotations-so3-group-index exponential-map logarithm-map orientation-parametrisations Which-orientation-parametrisation linearisation-of-an-orientation-in-so-3 Quaternion to rotation matrix Rotation error representation For filtering Additive-quaternion-filtering Multiplicative-quaternion-filtering-mekf Literature Solà 2017 Quaternion kinematics for ESKF MKok 2017 Using inertial sensors for position and orientation estimation</description></item><item><title>Quaternion multiplication</title><link>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-multiplication/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/quaternion-multiplication/</guid><description>Parent: Quaternion index Source: Solà 2017 Quaternion kinematics for ESKF Here: Hamiltonian convention, s. Quaternion conventions Non-commutative  Associative  Distributive Multiplication as a matrix product With
the matrices the skew operator (skew symmetric matrix) s. also cross product Source: Markley 2014 with the matrices</description></item><item><title>Unit quaternions</title><link>https://salehahr.github.io/zettelkasten/math/rotations/unit-quaternions/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/unit-quaternions/</guid><description>Parent: Quaternion index , orientation-parametrisations See also: quaternion-conventions , quaternion double cover Source: Solà 2017 Properties $$ \begin{aligned} \left\lVert \mathbf{q} \right\rVert &amp;amp;= 1\
\mathbf{q}^{-1} &amp;amp;= \mathbf{q}^* \end{aligned} $$
Can be written in the form $$ \mathbf{q} = \left[ \begin{array}{c} \cos\theta \ \mathbf{u} \sin\theta \end{array} \right] $$
with
$\mathbf{u}$ as a unit vector $\theta$ is the angle between $\mathbf{q}$ and the identity quaternion $\mathbf{q}_I = \left[\begin{array}{cccc}1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\end{array}\right]^\text{T}$</description></item><item><title>SE(3) Special Euclidian Group</title><link>https://salehahr.github.io/zettelkasten/math/rotations/se3-special-euclidian-group/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/se3-special-euclidian-group/</guid><description>Source: Forster 2017 &amp;ndash; IMU Preintegration Group of rigid motion in 3D.
Consists of
a rotation in SO(3) a translation in $\mathbb{R}^3$ $$\begin{aligned} \text{SE}(3) \dot{=} \left\lbrace \left(\mathbf{R}, \mathbf{p} \right) : \mathbf{R} \in \text{SO}(3), \mathbf{p} \in \mathbb{R}^3 \right\rbrace \end{aligned}$$
$$\begin{aligned} \mathbf{T}_1\mathbf{T}_2 &amp;amp;= \left( \mathbf{R}_1\mathbf{R}_2, \mathbf{R}_1\mathbf{p}_2 + \mathbf{p}_1 \right)\
\mathbf{T}_1^{-1} &amp;amp;= \left( \mathbf{R}_1^\text{T}, -\mathbf{R}_1^{\text{T}}\mathbf{p}_1 \right) \end{aligned}$$</description></item><item><title>SO(3) 3D rotation group</title><link>https://salehahr.github.io/zettelkasten/math/rotations/so3-3d-rotation-group/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/rotations/so3-3d-rotation-group/</guid><description>Parent: Rotations / SO(3) group index See also: Orientation parametrisations , Linearisation of an orientation , Solà 2017 quaternion kinematics for eskf Source: MKok 2017 All orthogonal matrices with dim 3x3 have the property
$$RR^\text{T} = R^\text{T}R = I_3$$ They are part of the orthogonal group O(3) If, additionally, $\det R = 1$, then the matrix belongs to SO(3) and is a rotation matrix Source: http://en.wikipedia.org/wiki/3D_rotation_group The SO(3) group</description></item><item><title>Frequentist vs Bayesian statistics</title><link>https://salehahr.github.io/zettelkasten/math/statistics/frequentist-vs-bayesian/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://salehahr.github.io/zettelkasten/math/statistics/frequentist-vs-bayesian/</guid><description>Frequentist vs Bayesian statistics Sources: rlabbe , blitzstein-hwang Frequentist Probability represents the frequency over an experiment repeated infinitely many times Probability of flipping a fair coin infinitely many times is 50% Bayesian Probability represents a belief about the event [ bh ] $\hat{=}$ hypothesis e.g. probability that someone is guilty Probability of flipping a fair coin one more time: which way do I believe it landed?</description></item></channel></rss>